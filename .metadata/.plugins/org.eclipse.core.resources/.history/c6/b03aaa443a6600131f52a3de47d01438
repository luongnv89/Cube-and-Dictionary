/*
 *  OAK USB Sensors Java Library    
 *  Author : Alexandre CHAN KIM PONNE
 *  Copyright (C) 2009 TELECOM SudParis
 *
 *  Released under LGPL v3
 *  http://www.gnu.org/licenses/lgpl-3.0.html
 *
 *  Contact : Sebastien.Leriche@it-sudparis.eu
 *
 *  Some parts were derived from examples of javax-usb-examples,
 *  under Copyright (c) 1999 - 2001, 
 *  International Business Machines Corporation
 */

package test;

import hid.HidDeviceJsr80Adaptateur;
import hid.HidRequestHeaderDescription;
import hid.IHidDevice;
import hidException.HidDisconnectedException;
import hidException.HidNotOpenDeviceException;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;

public class JSR80Test extends JFrame implements KeyListener {

	public static final HidRequestHeaderDescription GET_FEATURE_REPORT_HEADER = new HidRequestHeaderDescription(
			(byte) 0xA1, (byte) 0x01, (int) 0x0300, (int) 0x00);
	public static final HidRequestHeaderDescription SET_FEATURE_REPORT_HEADER = new HidRequestHeaderDescription(
			(byte) 0x21, (byte) 0x09, (int) 0x0200, (int) 0x00);

	public IHidDevice usb;
	public boolean read = true;

	public Thread listener;

	public JSR80Test() throws HidNotOpenDeviceException, HidDisconnectedException {
	
		  super();
		  
		  addKeyListener(this);
		  
		  setVisible(true);
		  
//		  usb = new Jsr80HidDeviceAdaptateur();
		  usb = new HidDeviceJsr80Adaptateur();
		  
		  usb.openDevice((int) 0x1b67, (int) 0x0003);
//		  usb.openDe
		  
//		  usb.printEndpoints();
		  System.out.println("Feature: " + usb.getSendFeatureReportHeader());
		  
		  listener = new Thread(){ byte[] data ; public void run() {
		  while(read){ try {
			data = usb.readInterruptReport();
		} catch (HidNotOpenDeviceException | HidDisconnectedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//		  usb.printInterruptReport(data);
		  try {
			usb.sendFeatureReport(data);
		} catch (HidNotOpenDeviceException | HidDisconnectedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		  
		  } } }; listener.start();
		  
		  
		  usb.setReadFeatureReportHeader(GET_FEATURE_REPORT_HEADER);
		  usb.setSendFeatureReportHeader(SET_FEATURE_REPORT_HEADER);
		  
		  
		  byte[] report = new byte[1]; report[0]= (byte) 0x01;
		  usb.sendFeatureReport (report); System.out.println("Data envoye ") ;
		  
//		  System.out.println(usb);
		 
	}

	public static void main(String argv[]) throws InterruptedException {
		try {
			new JSR80Test();
		} catch (HidNotOpenDeviceException | HidDisconnectedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void keyPressed(KeyEvent e) {
		/*
		 * if(e.getKeyChar() == 'a'){ read = false;
		 * 
		 * usb.stopReadInterruptReport(); usb.releaseDevice();
		 * System.out.println("stop"); dispose(); }
		 */
	}

	public void keyReleased(KeyEvent e) {
	}

	public void keyTyped(KeyEvent e) {
	}

}
