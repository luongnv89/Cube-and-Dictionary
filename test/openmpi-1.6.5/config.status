#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by Open MPI $as_me 1.6.5, which was
generated by GNU Autoconf 2.68.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" ompi/include/ompi/version.h orte/include/orte/version.h opal/include/opal/version.h opal/mca/hwloc/hwloc132/hwloc/Makefile opal/mca/hwloc/hwloc132/hwloc/include/Makefile opal/mca/hwloc/hwloc132/hwloc/src/Makefile opal/mca/installdirs/config/install_dirs.h opal/mca/backtrace/Makefile opal/mca/backtrace/darwin/Makefile opal/mca/backtrace/execinfo/Makefile opal/mca/backtrace/none/Makefile opal/mca/backtrace/printstack/Makefile opal/mca/carto/Makefile opal/mca/carto/auto_detect/Makefile opal/mca/carto/file/Makefile opal/mca/crs/Makefile opal/mca/crs/blcr/Makefile opal/mca/crs/none/Makefile opal/mca/crs/self/Makefile opal/mca/hwloc/Makefile opal/mca/hwloc/external/Makefile opal/mca/hwloc/hwloc132/Makefile opal/mca/installdirs/Makefile opal/mca/installdirs/config/Makefile opal/mca/installdirs/env/Makefile opal/mca/installdirs/windows/Makefile opal/mca/maffinity/Makefile opal/mca/maffinity/first_use/Makefile opal/mca/maffinity/hwloc/Makefile opal/mca/memchecker/Makefile opal/mca/memchecker/valgrind/Makefile opal/mca/memcpy/Makefile opal/mca/memory/Makefile opal/mca/memory/linux/Makefile opal/mca/memory/malloc_solaris/Makefile opal/mca/paffinity/Makefile opal/mca/paffinity/hwloc/Makefile opal/mca/paffinity/test/Makefile opal/mca/pstat/Makefile opal/mca/pstat/darwin/Makefile opal/mca/pstat/linux/Makefile opal/mca/shmem/Makefile opal/mca/shmem/mmap/Makefile opal/mca/shmem/posix/Makefile opal/mca/shmem/sysv/Makefile opal/mca/shmem/windows/Makefile opal/mca/sysinfo/Makefile opal/mca/sysinfo/darwin/Makefile opal/mca/sysinfo/linux/Makefile opal/mca/sysinfo/solaris/Makefile opal/mca/timer/Makefile opal/mca/timer/aix/Makefile opal/mca/timer/altix/Makefile opal/mca/timer/catamount/Makefile opal/mca/timer/darwin/Makefile opal/mca/timer/linux/Makefile opal/mca/timer/solaris/Makefile opal/mca/timer/windows/Makefile orte/mca/errmgr/Makefile orte/mca/errmgr/default/Makefile orte/mca/ess/Makefile orte/mca/ess/alps/Makefile orte/mca/ess/cnos/Makefile orte/mca/ess/env/Makefile orte/mca/ess/hnp/Makefile orte/mca/ess/lsf/Makefile orte/mca/ess/pmi/Makefile orte/mca/ess/portals_utcp/Makefile orte/mca/ess/singleton/Makefile orte/mca/ess/slave/Makefile orte/mca/ess/slurm/Makefile orte/mca/ess/slurmd/Makefile orte/mca/ess/tm/Makefile orte/mca/ess/tool/Makefile orte/mca/filem/Makefile orte/mca/filem/rsh/Makefile orte/mca/grpcomm/Makefile orte/mca/grpcomm/bad/Makefile orte/mca/grpcomm/basic/Makefile orte/mca/grpcomm/cnos/Makefile orte/mca/grpcomm/hier/Makefile orte/mca/grpcomm/pmi/Makefile orte/mca/iof/Makefile orte/mca/iof/hnp/Makefile orte/mca/iof/orted/Makefile orte/mca/iof/tool/Makefile orte/mca/notifier/Makefile orte/mca/notifier/command/Makefile orte/mca/notifier/ftb/Makefile orte/mca/notifier/smtp/Makefile orte/mca/notifier/syslog/Makefile orte/mca/odls/Makefile orte/mca/odls/default/Makefile orte/mca/odls/process/Makefile orte/mca/oob/Makefile orte/mca/oob/tcp/Makefile orte/mca/plm/Makefile orte/mca/plm/alps/Makefile orte/mca/plm/ccp/Makefile orte/mca/plm/lsf/Makefile orte/mca/plm/process/Makefile orte/mca/plm/rsh/Makefile orte/mca/plm/slurm/Makefile orte/mca/plm/tm/Makefile orte/mca/ras/Makefile orte/mca/ras/alps/Makefile orte/mca/ras/ccp/Makefile orte/mca/ras/cm/Makefile orte/mca/ras/gridengine/Makefile orte/mca/ras/loadleveler/Makefile orte/mca/ras/lsf/Makefile orte/mca/ras/slurm/Makefile orte/mca/ras/tm/Makefile orte/mca/rmaps/Makefile orte/mca/rmaps/load_balance/Makefile orte/mca/rmaps/rank_file/Makefile orte/mca/rmaps/resilient/Makefile orte/mca/rmaps/round_robin/Makefile orte/mca/rmaps/seq/Makefile orte/mca/rmaps/topo/Makefile orte/mca/rml/Makefile orte/mca/rml/ftrm/Makefile orte/mca/rml/oob/Makefile orte/mca/routed/Makefile orte/mca/routed/binomial/Makefile orte/mca/routed/cm/Makefile orte/mca/routed/direct/Makefile orte/mca/routed/linear/Makefile orte/mca/routed/radix/Makefile orte/mca/routed/slave/Makefile orte/mca/snapc/Makefile orte/mca/snapc/full/Makefile ompi/mca/allocator/Makefile ompi/mca/allocator/basic/Makefile ompi/mca/allocator/bucket/Makefile ompi/mca/bml/Makefile ompi/mca/bml/r2/Makefile ompi/mca/btl/Makefile ompi/mca/btl/elan/Makefile ompi/mca/btl/mx/Makefile ompi/mca/btl/ofud/Makefile ompi/mca/btl/openib/Makefile ompi/mca/btl/portals/Makefile ompi/mca/btl/sctp/Makefile ompi/mca/btl/self/Makefile ompi/mca/btl/sm/Makefile ompi/mca/btl/tcp/Makefile ompi/mca/btl/udapl/Makefile ompi/mca/coll/Makefile ompi/mca/coll/basic/Makefile ompi/mca/coll/fca/Makefile ompi/mca/coll/hierarch/Makefile ompi/mca/coll/inter/Makefile ompi/mca/coll/self/Makefile ompi/mca/coll/sm/Makefile ompi/mca/coll/sync/Makefile ompi/mca/coll/tuned/Makefile ompi/mca/common/Makefile ompi/mca/common/mx/Makefile ompi/mca/common/portals/Makefile ompi/mca/common/sm/Makefile ompi/mca/crcp/Makefile ompi/mca/crcp/bkmrk/Makefile ompi/mca/dpm/Makefile ompi/mca/dpm/orte/Makefile ompi/mca/io/Makefile ompi/mca/io/romio/Makefile ompi/mca/mpool/Makefile ompi/mca/mpool/fake/Makefile ompi/mca/mpool/rdma/Makefile ompi/mca/mpool/sm/Makefile ompi/mca/mtl/Makefile ompi/mca/mtl/mx/Makefile ompi/mca/mtl/mxm/Makefile ompi/mca/mtl/portals/Makefile ompi/mca/mtl/psm/Makefile ompi/mca/op/Makefile ompi/mca/osc/Makefile ompi/mca/osc/pt2pt/Makefile ompi/mca/osc/rdma/Makefile ompi/mca/pml/Makefile ompi/mca/pml/bfo/Makefile ompi/mca/pml/cm/Makefile ompi/mca/pml/crcpw/Makefile ompi/mca/pml/csum/Makefile ompi/mca/pml/ob1/Makefile ompi/mca/pml/v/mca/vprotocol/Makefile ompi/mca/pml/v/mca/vprotocol/pessimist/Makefile ompi/mca/pml/v/Makefile ompi/mca/pubsub/Makefile ompi/mca/pubsub/orte/Makefile ompi/mca/pubsub/pmi/Makefile ompi/mca/rcache/Makefile ompi/mca/rcache/vma/Makefile ompi/mca/topo/Makefile ompi/mca/topo/unity/Makefile ompi/contrib/libompitrace/Makefile ompi/mpiext/Makefile ompi/mpiext/affinity/Makefile ompi/mpiext/example/Makefile ompi/contrib/vt/Makefile ompi/contrib/vt/wrappers/Makefile ompi/contrib/vt/wrappers/mpicc-vt-wrapper-data.txt ompi/contrib/vt/wrappers/mpic++-vt-wrapper-data.txt ompi/contrib/vt/wrappers/mpif77-vt-wrapper-data.txt ompi/contrib/vt/wrappers/mpif90-vt-wrapper-data.txt Makefile config/Makefile contrib/Makefile test/Makefile test/event/Makefile test/asm/Makefile test/datatype/Makefile test/class/Makefile test/support/Makefile test/threads/Makefile test/util/Makefile opal/Makefile opal/etc/Makefile opal/include/Makefile opal/asm/Makefile opal/datatype/Makefile opal/event/Makefile opal/event/compat/Makefile opal/event/compat/sys/Makefile opal/util/Makefile opal/util/keyval/Makefile opal/mca/base/Makefile opal/tools/wrappers/Makefile opal/tools/wrappers/opalcc-wrapper-data.txt opal/tools/wrappers/opalc++-wrapper-data.txt opal/tools/wrappers/opal.pc opal/tools/opal-checkpoint/Makefile opal/tools/opal-restart/Makefile orte/Makefile orte/include/Makefile orte/etc/Makefile orte/tools/orted/Makefile orte/tools/orterun/Makefile orte/tools/wrappers/Makefile orte/tools/wrappers/ortecc-wrapper-data.txt orte/tools/wrappers/ortec++-wrapper-data.txt orte/tools/wrappers/orte.pc orte/tools/orte-checkpoint/Makefile orte/tools/orte-iof/Makefile orte/tools/orte-restart/Makefile orte/tools/orte-ps/Makefile orte/tools/orte-clean/Makefile orte/tools/orte-top/Makefile orte/tools/orte-bootproxy/Makefile ompi/Makefile ompi/etc/Makefile ompi/include/Makefile ompi/include/mpif.h ompi/include/mpif-config.h ompi/datatype/Makefile ompi/debuggers/Makefile ompi/mpi/c/Makefile ompi/mpi/c/profile/Makefile ompi/mpi/cxx/Makefile ompi/mpi/f77/Makefile ompi/mpi/f77/profile/Makefile ompi/mpi/f90/Makefile ompi/mpi/f90/fortran_kinds.sh ompi/mpi/f90/fortran_sizes.h ompi/mpi/f90/scripts/Makefile ompi/tools/ompi_info/Makefile ompi/tools/wrappers/Makefile ompi/tools/wrappers/mpicc-wrapper-data.txt ompi/tools/wrappers/mpic++-wrapper-data.txt ompi/tools/wrappers/mpif77-wrapper-data.txt ompi/tools/wrappers/mpif90-wrapper-data.txt ompi/tools/wrappers/ompi.pc ompi/tools/wrappers/ompi-c.pc ompi/tools/wrappers/ompi-cxx.pc ompi/tools/wrappers/ompi-f77.pc ompi/tools/wrappers/ompi-f90.pc ompi/tools/ortetools/Makefile ompi/tools/ompi-server/Makefile ompi/tools/ompi-probe/Makefile ompi/tools/ompi-profiler/Makefile"
config_headers=" opal/include/opal_config.h orte/include/orte_config.h ompi/include/ompi_config.h ompi/include/mpi.h ompi/include/mpi_portable_platform.h opal/mca/hwloc/hwloc132/hwloc/include/private/autogen/config.h opal/mca/hwloc/hwloc132/hwloc/include/hwloc/autogen/config.h"
config_commands=" depfiles libtool"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <http://www.open-mpi.org/community/help/>."

ac_cs_config="'--prefix=/usr/local/' --enable-ltdl-convenience"
ac_cs_version="\
Open MPI config.status 1.6.5
configured by ./configure, generated by GNU Autoconf 2.68,
  with options \"$ac_cs_config\"

Copyright (C) 2010 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/Users/luongnv89/programming/openmpi/openmpi-1.6.5'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='config/install-sh -c -d'
AWK='awk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X '/bin/sh' './configure'  '--prefix=/usr/local/' --enable-ltdl-convenience $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="config"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
enable_shared='yes'
enable_static='no'
NM='/usr/bin/nm'
macro_version='2.4.2'
macro_revision='1.3337'
AS='as'
DLLTOOL='false'
OBJDUMP='false'
pic_mode='default'
enable_fast_install='needless'
SHELL='/bin/sh'
ECHO='printf %s\n'
PATH_SEPARATOR=':'
host_alias=''
host='x86_64-apple-darwin13.0.0'
host_os='darwin13.0.0'
build_alias=''
build='x86_64-apple-darwin13.0.0'
build_os='darwin13.0.0'
SED='/usr/bin/sed'
Xsed='/usr/bin/sed -e 1s/^X//'
GREP='/usr/bin/grep'
EGREP='/usr/bin/grep -E'
FGREP='/usr/bin/grep -F'
LD='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
LN_S='ln -s'
max_cmd_len='196608'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
lt_cv_to_host_file_cmd='func_convert_file_noop'
lt_cv_to_tool_file_cmd='func_convert_file_noop'
reload_flag=' -r'
reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
file_magic_glob=''
want_nocaseglob='no'
sharedlib_from_linklib_cmd='printf %s\n'
AR='ar'
AR_FLAGS='cru'
archiver_list_spec=''
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
lock_old_archive_extraction='yes'
CC='gcc'
CFLAGS='-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing '
compiler='gfortran'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[BCDEGRST]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
nm_file_list_spec=''
lt_sysroot=''
objdir='.libs'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin -fno-rtti -fno-exceptions'
lt_prog_compiler_pic=' -fno-common -DPIC'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_static=''
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
MANIFEST_TOOL=':'
DSYMUTIL='dsymutil'
NMEDIT='nmedit'
LIPO='lipo'
OTOOL='otool'
OTOOL64=':'
libext='a'
shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec=''
whole_archive_flag_spec='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience ${wl}-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module'
archive_expsym_cmds='sed '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
module_cmds='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags'
module_expsym_cmds='sed -e '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
with_gnu_ld='no'
allow_undefined_flag='${wl}-undefined ${wl}dynamic_lookup'
no_undefined_flag=''
hardcode_libdir_flag_spec=''
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='yes'
inherit_rpath='no'
link_all_deplibs='yes'
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
postlink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH DYLD_LIBRARY_PATH  GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='darwin'
runpath_var=''
shlibpath_var='DYLD_LIBRARY_PATH'
shlibpath_overrides_runpath='yes'
libname_spec='lib$name'
library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
soname_spec='${libname}${release}${major}$shared_ext'
install_override_mode=''
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds=''
finish_eval=''
hardcode_into_libs='no'
sys_lib_search_path_spec='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/5.0  /usr/local/lib'
sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
hardcode_action='immediate'
enable_dlopen='yes'
enable_dlopen_self='yes'
enable_dlopen_self_static='yes'
old_striplib='strip -S'
striplib='strip -x'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
LD_F77='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
LD_FC='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
reload_flag_CXX=' -r'
reload_flag_F77=' -r'
reload_flag_FC=' -r'
reload_cmds_CXX='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
reload_cmds_F77='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
reload_cmds_FC='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
old_archive_cmds_F77='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
old_archive_cmds_FC='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
compiler_CXX='g++'
compiler_F77='gfortran'
compiler_FC='gfortran'
GCC_CXX='yes'
GCC_F77='yes'
GCC_FC='yes'
lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
lt_prog_compiler_no_builtin_flag_F77=''
lt_prog_compiler_no_builtin_flag_FC=''
lt_prog_compiler_pic_CXX=' -fno-common -DPIC'
lt_prog_compiler_pic_F77=' -fno-common'
lt_prog_compiler_pic_FC=' -fno-common'
lt_prog_compiler_wl_CXX='-Wl,'
lt_prog_compiler_wl_F77='-Wl,'
lt_prog_compiler_wl_FC='-Wl,'
lt_prog_compiler_static_CXX=''
lt_prog_compiler_static_F77=''
lt_prog_compiler_static_FC=''
lt_cv_prog_compiler_c_o_CXX='yes'
lt_cv_prog_compiler_c_o_F77='yes'
lt_cv_prog_compiler_c_o_FC='yes'
archive_cmds_need_lc_CXX='no'
archive_cmds_need_lc_F77='no'
archive_cmds_need_lc_FC='no'
enable_shared_with_static_runtimes_CXX='no'
enable_shared_with_static_runtimes_F77='no'
enable_shared_with_static_runtimes_FC='no'
export_dynamic_flag_spec_CXX=''
export_dynamic_flag_spec_F77=''
export_dynamic_flag_spec_FC=''
whole_archive_flag_spec_CXX='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience ${wl}-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
whole_archive_flag_spec_F77='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience ${wl}-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
whole_archive_flag_spec_FC='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience ${wl}-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
compiler_needs_object_CXX='no'
compiler_needs_object_F77='yes'
compiler_needs_object_FC='yes'
old_archive_from_new_cmds_CXX=''
old_archive_from_new_cmds_F77=''
old_archive_from_new_cmds_FC=''
old_archive_from_expsyms_cmds_CXX=''
old_archive_from_expsyms_cmds_F77=''
old_archive_from_expsyms_cmds_FC=''
archive_cmds_CXX='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module'
archive_cmds_F77='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module'
archive_cmds_FC='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module'
archive_expsym_cmds_CXX='sed '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
archive_expsym_cmds_F77='sed '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
archive_expsym_cmds_FC='sed '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
module_cmds_CXX='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags'
module_cmds_F77='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags'
module_cmds_FC='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags'
module_expsym_cmds_CXX='sed -e '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
module_expsym_cmds_F77='sed -e '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
module_expsym_cmds_FC='sed -e '\''s,^,_,'\'' < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
with_gnu_ld_CXX='no'
with_gnu_ld_F77='no'
with_gnu_ld_FC='no'
allow_undefined_flag_CXX='${wl}-undefined ${wl}dynamic_lookup'
allow_undefined_flag_F77='${wl}-undefined ${wl}dynamic_lookup'
allow_undefined_flag_FC='${wl}-undefined ${wl}dynamic_lookup'
no_undefined_flag_CXX=''
no_undefined_flag_F77=''
no_undefined_flag_FC=''
hardcode_libdir_flag_spec_CXX=''
hardcode_libdir_flag_spec_F77=''
hardcode_libdir_flag_spec_FC=''
hardcode_libdir_separator_CXX=''
hardcode_libdir_separator_F77=''
hardcode_libdir_separator_FC=''
hardcode_direct_CXX='no'
hardcode_direct_F77='no'
hardcode_direct_FC='no'
hardcode_direct_absolute_CXX='no'
hardcode_direct_absolute_F77='no'
hardcode_direct_absolute_FC='no'
hardcode_minus_L_CXX='no'
hardcode_minus_L_F77='no'
hardcode_minus_L_FC='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_shlibpath_var_F77='unsupported'
hardcode_shlibpath_var_FC='unsupported'
hardcode_automatic_CXX='yes'
hardcode_automatic_F77='yes'
hardcode_automatic_FC='yes'
inherit_rpath_CXX='no'
inherit_rpath_F77='no'
inherit_rpath_FC='no'
link_all_deplibs_CXX='yes'
link_all_deplibs_F77='yes'
link_all_deplibs_FC='yes'
always_export_symbols_CXX='no'
always_export_symbols_F77='no'
always_export_symbols_FC='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
export_symbols_cmds_F77='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
export_symbols_cmds_FC='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
exclude_expsyms_F77='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
exclude_expsyms_FC='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms_CXX=''
include_expsyms_F77=''
include_expsyms_FC=''
prelink_cmds_CXX=''
prelink_cmds_F77=''
prelink_cmds_FC=''
postlink_cmds_CXX=''
postlink_cmds_F77=''
postlink_cmds_FC=''
file_list_spec_CXX=''
file_list_spec_F77=''
file_list_spec_FC=''
hardcode_action_CXX='immediate'
hardcode_action_F77='immediate'
hardcode_action_FC='immediate'
compiler_lib_search_dirs_CXX=''
compiler_lib_search_dirs_F77=''
compiler_lib_search_dirs_FC=''
predep_objects_CXX=''
predep_objects_F77=''
predep_objects_FC=''
postdep_objects_CXX=''
postdep_objects_F77=''
postdep_objects_FC=''
predeps_CXX=''
predeps_F77=''
predeps_FC=''
postdeps_CXX=''
postdeps_F77=''
postdeps_FC=''
compiler_lib_search_path_CXX=''
compiler_lib_search_path_F77=''
compiler_lib_search_path_FC=''

LTCC='gcc'
LTCFLAGS='-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing '
compiler='gcc'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in NM AS DLLTOOL OBJDUMP SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD LN_S lt_SP2NL lt_NL2SP reload_flag deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix nm_file_list_spec lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX LD_F77 LD_FC reload_flag_CXX reload_flag_F77 reload_flag_FC compiler_CXX compiler_F77 compiler_FC lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_no_builtin_flag_F77 lt_prog_compiler_no_builtin_flag_FC lt_prog_compiler_pic_CXX lt_prog_compiler_pic_F77 lt_prog_compiler_pic_FC lt_prog_compiler_wl_CXX lt_prog_compiler_wl_F77 lt_prog_compiler_wl_FC lt_prog_compiler_static_CXX lt_prog_compiler_static_F77 lt_prog_compiler_static_FC lt_cv_prog_compiler_c_o_CXX lt_cv_prog_compiler_c_o_F77 lt_cv_prog_compiler_c_o_FC export_dynamic_flag_spec_CXX export_dynamic_flag_spec_F77 export_dynamic_flag_spec_FC whole_archive_flag_spec_CXX whole_archive_flag_spec_F77 whole_archive_flag_spec_FC compiler_needs_object_CXX compiler_needs_object_F77 compiler_needs_object_FC with_gnu_ld_CXX with_gnu_ld_F77 with_gnu_ld_FC allow_undefined_flag_CXX allow_undefined_flag_F77 allow_undefined_flag_FC no_undefined_flag_CXX no_undefined_flag_F77 no_undefined_flag_FC hardcode_libdir_flag_spec_CXX hardcode_libdir_flag_spec_F77 hardcode_libdir_flag_spec_FC hardcode_libdir_separator_CXX hardcode_libdir_separator_F77 hardcode_libdir_separator_FC exclude_expsyms_CXX exclude_expsyms_F77 exclude_expsyms_FC include_expsyms_CXX include_expsyms_F77 include_expsyms_FC file_list_spec_CXX file_list_spec_F77 file_list_spec_FC compiler_lib_search_dirs_CXX compiler_lib_search_dirs_F77 compiler_lib_search_dirs_FC predep_objects_CXX predep_objects_F77 predep_objects_FC postdep_objects_CXX postdep_objects_F77 postdep_objects_FC predeps_CXX predeps_F77 predeps_FC postdeps_CXX postdeps_F77 postdeps_FC compiler_lib_search_path_CXX compiler_lib_search_path_F77 compiler_lib_search_path_FC; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED \"\$sed_quote_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec sys_lib_dlsearch_path_spec reload_cmds_CXX reload_cmds_F77 reload_cmds_FC old_archive_cmds_CXX old_archive_cmds_F77 old_archive_cmds_FC old_archive_from_new_cmds_CXX old_archive_from_new_cmds_F77 old_archive_from_new_cmds_FC old_archive_from_expsyms_cmds_CXX old_archive_from_expsyms_cmds_F77 old_archive_from_expsyms_cmds_FC archive_cmds_CXX archive_cmds_F77 archive_cmds_FC archive_expsym_cmds_CXX archive_expsym_cmds_F77 archive_expsym_cmds_FC module_cmds_CXX module_cmds_F77 module_cmds_FC module_expsym_cmds_CXX module_expsym_cmds_F77 module_expsym_cmds_FC export_symbols_cmds_CXX export_symbols_cmds_F77 export_symbols_cmds_FC prelink_cmds_CXX prelink_cmds_F77 prelink_cmds_FC postlink_cmds_CXX postlink_cmds_F77 postlink_cmds_FC; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

ac_aux_dir='config'
xsi_shell='yes'
lt_shell_append='yes'

# See if we are running on zsh, and set the options which allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}" ; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='openmpi'
    VERSION='1.6.5'
    TIMESTAMP=''
    RM='rm -f'
    ofile='libtool'











# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "ompi/include/ompi/version.h") CONFIG_FILES="$CONFIG_FILES ompi/include/ompi/version.h" ;;
    "orte/include/orte/version.h") CONFIG_FILES="$CONFIG_FILES orte/include/orte/version.h" ;;
    "opal/include/opal/version.h") CONFIG_FILES="$CONFIG_FILES opal/include/opal/version.h" ;;
    "opal/include/opal_config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/include/opal_config.h" ;;
    "orte/include/orte_config.h") CONFIG_HEADERS="$CONFIG_HEADERS orte/include/orte_config.h" ;;
    "ompi/include/ompi_config.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/include/ompi_config.h" ;;
    "ompi/include/mpi.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/include/mpi.h" ;;
    "ompi/include/mpi_portable_platform.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/include/mpi_portable_platform.h" ;;
    "opal/mca/hwloc/hwloc132/hwloc/include/private/autogen/config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/mca/hwloc/hwloc132/hwloc/include/private/autogen/config.h" ;;
    "opal/mca/hwloc/hwloc132/hwloc/include/hwloc/autogen/config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/mca/hwloc/hwloc132/hwloc/include/hwloc/autogen/config.h" ;;
    "opal/mca/hwloc/hwloc132/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc132/hwloc/Makefile" ;;
    "opal/mca/hwloc/hwloc132/hwloc/include/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc132/hwloc/include/Makefile" ;;
    "opal/mca/hwloc/hwloc132/hwloc/src/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc132/hwloc/src/Makefile" ;;
    "opal/mca/installdirs/config/install_dirs.h") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/config/install_dirs.h" ;;
    "opal/mca/backtrace/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/Makefile" ;;
    "opal/mca/backtrace/darwin/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/darwin/Makefile" ;;
    "opal/mca/backtrace/execinfo/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/execinfo/Makefile" ;;
    "opal/mca/backtrace/none/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/none/Makefile" ;;
    "opal/mca/backtrace/printstack/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/printstack/Makefile" ;;
    "opal/mca/carto/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/carto/Makefile" ;;
    "opal/mca/carto/auto_detect/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/carto/auto_detect/Makefile" ;;
    "opal/mca/carto/file/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/carto/file/Makefile" ;;
    "opal/mca/crs/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/Makefile" ;;
    "opal/mca/crs/blcr/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/blcr/Makefile" ;;
    "opal/mca/crs/none/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/none/Makefile" ;;
    "opal/mca/crs/self/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/self/Makefile" ;;
    "opal/mca/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/Makefile" ;;
    "opal/mca/hwloc/external/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/external/Makefile" ;;
    "opal/mca/hwloc/hwloc132/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc132/Makefile" ;;
    "opal/mca/installdirs/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/Makefile" ;;
    "opal/mca/installdirs/config/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/config/Makefile" ;;
    "opal/mca/installdirs/env/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/env/Makefile" ;;
    "opal/mca/installdirs/windows/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/windows/Makefile" ;;
    "opal/mca/maffinity/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/maffinity/Makefile" ;;
    "opal/mca/maffinity/first_use/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/maffinity/first_use/Makefile" ;;
    "opal/mca/maffinity/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/maffinity/hwloc/Makefile" ;;
    "opal/mca/memchecker/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memchecker/Makefile" ;;
    "opal/mca/memchecker/valgrind/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memchecker/valgrind/Makefile" ;;
    "opal/mca/memcpy/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memcpy/Makefile" ;;
    "opal/mca/memory/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/Makefile" ;;
    "opal/mca/memory/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/linux/Makefile" ;;
    "opal/mca/memory/malloc_solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/malloc_solaris/Makefile" ;;
    "opal/mca/paffinity/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/paffinity/Makefile" ;;
    "opal/mca/paffinity/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/paffinity/hwloc/Makefile" ;;
    "opal/mca/paffinity/test/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/paffinity/test/Makefile" ;;
    "opal/mca/pstat/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pstat/Makefile" ;;
    "opal/mca/pstat/darwin/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pstat/darwin/Makefile" ;;
    "opal/mca/pstat/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pstat/linux/Makefile" ;;
    "opal/mca/shmem/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/Makefile" ;;
    "opal/mca/shmem/mmap/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/mmap/Makefile" ;;
    "opal/mca/shmem/posix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/posix/Makefile" ;;
    "opal/mca/shmem/sysv/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/sysv/Makefile" ;;
    "opal/mca/shmem/windows/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/windows/Makefile" ;;
    "opal/mca/sysinfo/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sysinfo/Makefile" ;;
    "opal/mca/sysinfo/darwin/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sysinfo/darwin/Makefile" ;;
    "opal/mca/sysinfo/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sysinfo/linux/Makefile" ;;
    "opal/mca/sysinfo/solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sysinfo/solaris/Makefile" ;;
    "opal/mca/timer/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/Makefile" ;;
    "opal/mca/timer/aix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/aix/Makefile" ;;
    "opal/mca/timer/altix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/altix/Makefile" ;;
    "opal/mca/timer/catamount/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/catamount/Makefile" ;;
    "opal/mca/timer/darwin/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/darwin/Makefile" ;;
    "opal/mca/timer/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/linux/Makefile" ;;
    "opal/mca/timer/solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/solaris/Makefile" ;;
    "opal/mca/timer/windows/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/windows/Makefile" ;;
    "orte/mca/errmgr/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/Makefile" ;;
    "orte/mca/errmgr/default/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/default/Makefile" ;;
    "orte/mca/ess/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/Makefile" ;;
    "orte/mca/ess/alps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/alps/Makefile" ;;
    "orte/mca/ess/cnos/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/cnos/Makefile" ;;
    "orte/mca/ess/env/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/env/Makefile" ;;
    "orte/mca/ess/hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/hnp/Makefile" ;;
    "orte/mca/ess/lsf/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/lsf/Makefile" ;;
    "orte/mca/ess/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/pmi/Makefile" ;;
    "orte/mca/ess/portals_utcp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/portals_utcp/Makefile" ;;
    "orte/mca/ess/singleton/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/singleton/Makefile" ;;
    "orte/mca/ess/slave/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/slave/Makefile" ;;
    "orte/mca/ess/slurm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/slurm/Makefile" ;;
    "orte/mca/ess/slurmd/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/slurmd/Makefile" ;;
    "orte/mca/ess/tm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/tm/Makefile" ;;
    "orte/mca/ess/tool/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/tool/Makefile" ;;
    "orte/mca/filem/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/filem/Makefile" ;;
    "orte/mca/filem/rsh/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/filem/rsh/Makefile" ;;
    "orte/mca/grpcomm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/Makefile" ;;
    "orte/mca/grpcomm/bad/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/bad/Makefile" ;;
    "orte/mca/grpcomm/basic/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/basic/Makefile" ;;
    "orte/mca/grpcomm/cnos/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/cnos/Makefile" ;;
    "orte/mca/grpcomm/hier/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/hier/Makefile" ;;
    "orte/mca/grpcomm/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/pmi/Makefile" ;;
    "orte/mca/iof/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/Makefile" ;;
    "orte/mca/iof/hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/hnp/Makefile" ;;
    "orte/mca/iof/orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/orted/Makefile" ;;
    "orte/mca/iof/tool/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/tool/Makefile" ;;
    "orte/mca/notifier/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/notifier/Makefile" ;;
    "orte/mca/notifier/command/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/notifier/command/Makefile" ;;
    "orte/mca/notifier/ftb/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/notifier/ftb/Makefile" ;;
    "orte/mca/notifier/smtp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/notifier/smtp/Makefile" ;;
    "orte/mca/notifier/syslog/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/notifier/syslog/Makefile" ;;
    "orte/mca/odls/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/odls/Makefile" ;;
    "orte/mca/odls/default/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/odls/default/Makefile" ;;
    "orte/mca/odls/process/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/odls/process/Makefile" ;;
    "orte/mca/oob/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/oob/Makefile" ;;
    "orte/mca/oob/tcp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/oob/tcp/Makefile" ;;
    "orte/mca/plm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/Makefile" ;;
    "orte/mca/plm/alps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/alps/Makefile" ;;
    "orte/mca/plm/ccp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/ccp/Makefile" ;;
    "orte/mca/plm/lsf/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/lsf/Makefile" ;;
    "orte/mca/plm/process/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/process/Makefile" ;;
    "orte/mca/plm/rsh/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/rsh/Makefile" ;;
    "orte/mca/plm/slurm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/slurm/Makefile" ;;
    "orte/mca/plm/tm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/tm/Makefile" ;;
    "orte/mca/ras/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/Makefile" ;;
    "orte/mca/ras/alps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/alps/Makefile" ;;
    "orte/mca/ras/ccp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/ccp/Makefile" ;;
    "orte/mca/ras/cm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/cm/Makefile" ;;
    "orte/mca/ras/gridengine/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/gridengine/Makefile" ;;
    "orte/mca/ras/loadleveler/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/loadleveler/Makefile" ;;
    "orte/mca/ras/lsf/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/lsf/Makefile" ;;
    "orte/mca/ras/slurm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/slurm/Makefile" ;;
    "orte/mca/ras/tm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/tm/Makefile" ;;
    "orte/mca/rmaps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/Makefile" ;;
    "orte/mca/rmaps/load_balance/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/load_balance/Makefile" ;;
    "orte/mca/rmaps/rank_file/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/rank_file/Makefile" ;;
    "orte/mca/rmaps/resilient/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/resilient/Makefile" ;;
    "orte/mca/rmaps/round_robin/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/round_robin/Makefile" ;;
    "orte/mca/rmaps/seq/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/seq/Makefile" ;;
    "orte/mca/rmaps/topo/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/topo/Makefile" ;;
    "orte/mca/rml/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rml/Makefile" ;;
    "orte/mca/rml/ftrm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rml/ftrm/Makefile" ;;
    "orte/mca/rml/oob/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rml/oob/Makefile" ;;
    "orte/mca/routed/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/Makefile" ;;
    "orte/mca/routed/binomial/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/binomial/Makefile" ;;
    "orte/mca/routed/cm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/cm/Makefile" ;;
    "orte/mca/routed/direct/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/direct/Makefile" ;;
    "orte/mca/routed/linear/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/linear/Makefile" ;;
    "orte/mca/routed/radix/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/radix/Makefile" ;;
    "orte/mca/routed/slave/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/slave/Makefile" ;;
    "orte/mca/snapc/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/snapc/Makefile" ;;
    "orte/mca/snapc/full/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/snapc/full/Makefile" ;;
    "ompi/mca/allocator/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/allocator/Makefile" ;;
    "ompi/mca/allocator/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/allocator/basic/Makefile" ;;
    "ompi/mca/allocator/bucket/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/allocator/bucket/Makefile" ;;
    "ompi/mca/bml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bml/Makefile" ;;
    "ompi/mca/bml/r2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bml/r2/Makefile" ;;
    "ompi/mca/btl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/Makefile" ;;
    "ompi/mca/btl/elan/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/elan/Makefile" ;;
    "ompi/mca/btl/mx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/mx/Makefile" ;;
    "ompi/mca/btl/ofud/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/ofud/Makefile" ;;
    "ompi/mca/btl/openib/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/openib/Makefile" ;;
    "ompi/mca/btl/portals/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/portals/Makefile" ;;
    "ompi/mca/btl/sctp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/sctp/Makefile" ;;
    "ompi/mca/btl/self/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/self/Makefile" ;;
    "ompi/mca/btl/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/sm/Makefile" ;;
    "ompi/mca/btl/tcp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/tcp/Makefile" ;;
    "ompi/mca/btl/udapl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/udapl/Makefile" ;;
    "ompi/mca/coll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/Makefile" ;;
    "ompi/mca/coll/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/basic/Makefile" ;;
    "ompi/mca/coll/fca/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/fca/Makefile" ;;
    "ompi/mca/coll/hierarch/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/hierarch/Makefile" ;;
    "ompi/mca/coll/inter/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/inter/Makefile" ;;
    "ompi/mca/coll/self/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/self/Makefile" ;;
    "ompi/mca/coll/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/sm/Makefile" ;;
    "ompi/mca/coll/sync/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/sync/Makefile" ;;
    "ompi/mca/coll/tuned/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/tuned/Makefile" ;;
    "ompi/mca/common/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/Makefile" ;;
    "ompi/mca/common/mx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/mx/Makefile" ;;
    "ompi/mca/common/portals/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/portals/Makefile" ;;
    "ompi/mca/common/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/sm/Makefile" ;;
    "ompi/mca/crcp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/crcp/Makefile" ;;
    "ompi/mca/crcp/bkmrk/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/crcp/bkmrk/Makefile" ;;
    "ompi/mca/dpm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/dpm/Makefile" ;;
    "ompi/mca/dpm/orte/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/dpm/orte/Makefile" ;;
    "ompi/mca/io/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/Makefile" ;;
    "ompi/mca/io/romio/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/romio/Makefile" ;;
    "ompi/mca/mpool/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/Makefile" ;;
    "ompi/mca/mpool/fake/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/fake/Makefile" ;;
    "ompi/mca/mpool/rdma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/rdma/Makefile" ;;
    "ompi/mca/mpool/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/sm/Makefile" ;;
    "ompi/mca/mtl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/Makefile" ;;
    "ompi/mca/mtl/mx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/mx/Makefile" ;;
    "ompi/mca/mtl/mxm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/mxm/Makefile" ;;
    "ompi/mca/mtl/portals/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/portals/Makefile" ;;
    "ompi/mca/mtl/psm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/psm/Makefile" ;;
    "ompi/mca/op/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/op/Makefile" ;;
    "ompi/mca/osc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/Makefile" ;;
    "ompi/mca/osc/pt2pt/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/pt2pt/Makefile" ;;
    "ompi/mca/osc/rdma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/rdma/Makefile" ;;
    "ompi/mca/pml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/Makefile" ;;
    "ompi/mca/pml/bfo/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/bfo/Makefile" ;;
    "ompi/mca/pml/cm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/cm/Makefile" ;;
    "ompi/mca/pml/crcpw/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/crcpw/Makefile" ;;
    "ompi/mca/pml/csum/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/csum/Makefile" ;;
    "ompi/mca/pml/ob1/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/ob1/Makefile" ;;
    "ompi/mca/pml/v/mca/vprotocol/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/v/mca/vprotocol/Makefile" ;;
    "ompi/mca/pml/v/mca/vprotocol/pessimist/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/v/mca/vprotocol/pessimist/Makefile" ;;
    "ompi/mca/pml/v/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/v/Makefile" ;;
    "ompi/mca/pubsub/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pubsub/Makefile" ;;
    "ompi/mca/pubsub/orte/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pubsub/orte/Makefile" ;;
    "ompi/mca/pubsub/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pubsub/pmi/Makefile" ;;
    "ompi/mca/rcache/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/rcache/Makefile" ;;
    "ompi/mca/rcache/vma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/rcache/vma/Makefile" ;;
    "ompi/mca/topo/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/Makefile" ;;
    "ompi/mca/topo/unity/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/unity/Makefile" ;;
    "ompi/contrib/libompitrace/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/contrib/libompitrace/Makefile" ;;
    "ompi/mpiext/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/Makefile" ;;
    "ompi/mpiext/affinity/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/affinity/Makefile" ;;
    "ompi/mpiext/example/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/example/Makefile" ;;
    "ompi/contrib/vt/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/Makefile" ;;
    "ompi/contrib/vt/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/Makefile" ;;
    "ompi/contrib/vt/wrappers/mpicc-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpicc-vt-wrapper-data.txt" ;;
    "ompi/contrib/vt/wrappers/mpic++-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpic++-vt-wrapper-data.txt" ;;
    "ompi/contrib/vt/wrappers/mpif77-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpif77-vt-wrapper-data.txt" ;;
    "ompi/contrib/vt/wrappers/mpif90-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpif90-vt-wrapper-data.txt" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "orte/tools/wrappers/orte_wrapper_script") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/orte_wrapper_script" ;;
    "ompi/tools/wrappers/ompi_wrapper_script") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi_wrapper_script" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "config/Makefile") CONFIG_FILES="$CONFIG_FILES config/Makefile" ;;
    "contrib/Makefile") CONFIG_FILES="$CONFIG_FILES contrib/Makefile" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/event/Makefile") CONFIG_FILES="$CONFIG_FILES test/event/Makefile" ;;
    "test/asm/Makefile") CONFIG_FILES="$CONFIG_FILES test/asm/Makefile" ;;
    "test/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES test/datatype/Makefile" ;;
    "test/class/Makefile") CONFIG_FILES="$CONFIG_FILES test/class/Makefile" ;;
    "test/support/Makefile") CONFIG_FILES="$CONFIG_FILES test/support/Makefile" ;;
    "test/threads/Makefile") CONFIG_FILES="$CONFIG_FILES test/threads/Makefile" ;;
    "test/util/Makefile") CONFIG_FILES="$CONFIG_FILES test/util/Makefile" ;;
    "opal/Makefile") CONFIG_FILES="$CONFIG_FILES opal/Makefile" ;;
    "opal/etc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/etc/Makefile" ;;
    "opal/include/Makefile") CONFIG_FILES="$CONFIG_FILES opal/include/Makefile" ;;
    "opal/asm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/asm/Makefile" ;;
    "opal/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES opal/datatype/Makefile" ;;
    "opal/event/Makefile") CONFIG_FILES="$CONFIG_FILES opal/event/Makefile" ;;
    "opal/event/compat/Makefile") CONFIG_FILES="$CONFIG_FILES opal/event/compat/Makefile" ;;
    "opal/event/compat/sys/Makefile") CONFIG_FILES="$CONFIG_FILES opal/event/compat/sys/Makefile" ;;
    "opal/util/Makefile") CONFIG_FILES="$CONFIG_FILES opal/util/Makefile" ;;
    "opal/util/keyval/Makefile") CONFIG_FILES="$CONFIG_FILES opal/util/keyval/Makefile" ;;
    "opal/mca/base/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/base/Makefile" ;;
    "opal/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/Makefile" ;;
    "opal/tools/wrappers/opalcc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opalcc-wrapper-data.txt" ;;
    "opal/tools/wrappers/opalc++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opalc++-wrapper-data.txt" ;;
    "opal/tools/wrappers/opal.pc") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opal.pc" ;;
    "opal/tools/opal-checkpoint/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/opal-checkpoint/Makefile" ;;
    "opal/tools/opal-restart/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/opal-restart/Makefile" ;;
    "orte/Makefile") CONFIG_FILES="$CONFIG_FILES orte/Makefile" ;;
    "orte/include/Makefile") CONFIG_FILES="$CONFIG_FILES orte/include/Makefile" ;;
    "orte/etc/Makefile") CONFIG_FILES="$CONFIG_FILES orte/etc/Makefile" ;;
    "orte/tools/orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orted/Makefile" ;;
    "orte/tools/orterun/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orterun/Makefile" ;;
    "orte/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/Makefile" ;;
    "orte/tools/wrappers/ortecc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/ortecc-wrapper-data.txt" ;;
    "orte/tools/wrappers/ortec++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/ortec++-wrapper-data.txt" ;;
    "orte/tools/wrappers/orte.pc") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/orte.pc" ;;
    "orte/tools/orte-checkpoint/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-checkpoint/Makefile" ;;
    "orte/tools/orte-iof/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-iof/Makefile" ;;
    "orte/tools/orte-restart/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-restart/Makefile" ;;
    "orte/tools/orte-ps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-ps/Makefile" ;;
    "orte/tools/orte-clean/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-clean/Makefile" ;;
    "orte/tools/orte-top/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-top/Makefile" ;;
    "orte/tools/orte-bootproxy/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-bootproxy/Makefile" ;;
    "ompi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/Makefile" ;;
    "ompi/etc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/etc/Makefile" ;;
    "ompi/include/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/include/Makefile" ;;
    "ompi/include/mpif.h") CONFIG_FILES="$CONFIG_FILES ompi/include/mpif.h" ;;
    "ompi/include/mpif-config.h") CONFIG_FILES="$CONFIG_FILES ompi/include/mpif-config.h" ;;
    "ompi/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/datatype/Makefile" ;;
    "ompi/debuggers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/debuggers/Makefile" ;;
    "ompi/mpi/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/c/Makefile" ;;
    "ompi/mpi/c/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/c/profile/Makefile" ;;
    "ompi/mpi/cxx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/cxx/Makefile" ;;
    "ompi/mpi/f77/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/f77/Makefile" ;;
    "ompi/mpi/f77/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/f77/profile/Makefile" ;;
    "ompi/mpi/f90/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/f90/Makefile" ;;
    "ompi/mpi/f90/fortran_kinds.sh") CONFIG_FILES="$CONFIG_FILES ompi/mpi/f90/fortran_kinds.sh" ;;
    "ompi/mpi/f90/fortran_sizes.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/f90/fortran_sizes.h" ;;
    "ompi/mpi/f90/scripts/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/f90/scripts/Makefile" ;;
    "ompi/tools/ompi_info/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ompi_info/Makefile" ;;
    "ompi/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/Makefile" ;;
    "ompi/tools/wrappers/mpicc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpicc-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpic++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpic++-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpif77-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpif77-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpif90-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpif90-wrapper-data.txt" ;;
    "ompi/tools/wrappers/ompi.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi.pc" ;;
    "ompi/tools/wrappers/ompi-c.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-c.pc" ;;
    "ompi/tools/wrappers/ompi-cxx.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-cxx.pc" ;;
    "ompi/tools/wrappers/ompi-f77.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-f77.pc" ;;
    "ompi/tools/wrappers/ompi-f90.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-f90.pc" ;;
    "ompi/tools/ortetools/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ortetools/Makefile" ;;
    "ompi/tools/ompi-server/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ompi-server/Makefile" ;;
    "ompi/tools/ompi-probe/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ompi-probe/Makefile" ;;
    "ompi/tools/ompi-profiler/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ompi-profiler/Makefile" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["WRAPPER_EXTRA_FCFLAGS"]="-Wl,-commons,use_dylibs "
S["WRAPPER_EXTRA_FFLAGS"]="-Wl,-commons,use_dylibs "
S["OMPI_WRAPPER_LIBDIR"]="/usr/local/lib"
S["OMPI_WRAPPER_INCLUDEDIR"]="/usr/local/include"
S["OMPI_WRAPPER_F90_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_F77_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_CXX_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_CXX_LIB"]="-lmpi_cxx"
S["OMPI_WRAPPER_EXTRA_INCLUDES"]=""
S["OMPI_WRAPPER_EXTRA_LIBS"]="    -lm  "
S["OMPI_WRAPPER_EXTRA_LDFLAGS"]="    "
S["OMPI_WRAPPER_EXTRA_FCFLAGS"]="-Wl,-commons,use_dylibs "
S["OMPI_WRAPPER_EXTRA_FFLAGS"]="-Wl,-commons,use_dylibs "
S["OMPI_WRAPPER_EXTRA_CXXFLAGS"]=" "
S["OMPI_WRAPPER_EXTRA_CFLAGS"]=" "
S["OMPI_WRAPPER_EXTRA_CPPFLAGS"]=""
S["ORTE_WRAPPER_LIBDIR"]="/usr/local/lib"
S["ORTE_WRAPPER_INCLUDEDIR"]="/usr/local/include"
S["ORTE_WRAPPER_EXTRA_INCLUDES"]=""
S["ORTE_WRAPPER_EXTRA_LIBS"]="   -lm  "
S["ORTE_WRAPPER_EXTRA_LDFLAGS"]="   "
S["ORTE_WRAPPER_EXTRA_CFLAGS"]=" "
S["ORTE_WRAPPER_EXTRA_CXXFLAGS"]=" "
S["ORTE_WRAPPER_EXTRA_CPPFLAGS"]=""
S["WRAPPER_EXTRA_LIBS"]="  -lm  "
S["WRAPPER_EXTRA_LDFLAGS"]="  "
S["WRAPPER_EXTRA_CXXFLAGS"]=" "
S["WRAPPER_EXTRA_CFLAGS"]=" "
S["OPAL_WRAPPER_LIBDIR"]="/usr/local/lib"
S["OPAL_WRAPPER_INCLUDEDIR"]="/usr/local/include"
S["OPAL_WRAPPER_EXTRA_INCLUDES"]=""
S["OPAL_WRAPPER_EXTRA_LIBS"]="  -lm  "
S["OPAL_WRAPPER_EXTRA_LDFLAGS"]="  "
S["OPAL_WRAPPER_EXTRA_CXXFLAGS"]=" "
S["OPAL_WRAPPER_EXTRA_CFLAGS"]=" "
S["OPAL_WRAPPER_EXTRA_CPPFLAGS"]=" "
S["AMCA_PARAM_SETS_DIR"]="$(pkgdatadir)/amca-param-sets"
S["OMPI_LIBMPI_EXTRA_LDFLAGS"]=""
S["OMPI_LIBMPI_EXTRA_LIBS"]=""
S["CXXCPPFLAGS"]="-I$(top_srcdir)  -D_REENTRANT"
S["DEBUGGER_CFLAGS"]="-g"
S["CFLAGS_WITHOUT_OPTFLAGS"]=" -DNDEBUG -fno-strict-aliasing"
S["OPAL_HAVE_DLOPEN_FALSE"]="#"
S["OPAL_HAVE_DLOPEN_TRUE"]=""
S["LIBLTDL_SUBDIR"]="libltdl"
S["OPAL_DYN_LIB_SUFFIX"]="dylib"
S["OPAL_DYN_LIB_PREFIX"]="lib"
S["OTOOL64"]=":"
S["OTOOL"]="otool"
S["LIPO"]="lipo"
S["NMEDIT"]="nmedit"
S["DSYMUTIL"]="dsymutil"
S["MANIFEST_TOOL"]=":"
S["RANLIB"]="ranlib"
S["ac_ct_AR"]="ar"
S["AR"]="ar"
S["LD"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld"
S["SED"]="/usr/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["DLLTOOL"]="false"
S["AS"]="as"
S["INCLTDL"]="-I${top_srcdir}/opal/libltdl"
S["LTDLINCL"]="-I${top_srcdir}/opal/libltdl"
S["LTDLDEPS"]="${top_build_prefix}opal/libltdl/libltdlc.la"
S["LIBLTDL"]="${top_build_prefix}opal/libltdl/libltdlc.la"
S["OPAL_LIBEVENT_SOURCES"]="signal.c select.c "
S["OMPI_CONTRIB_DIST_SUBDIRS"]=" contrib/libompitrace contrib/vt"
S["OMPI_CONTRIB_SUBDIRS"]=" contrib/libompitrace contrib/vt"
S["EXT_PROJECT_SUBDIRS"]=" ompi"
S["EXT_F90_LIBS"]=""
S["EXT_F77_LIBS"]=""
S["EXT_CXX_LIBS"]=""
S["EXT_C_LIBS"]=""
S["EXT_F90_HEADERS"]=""
S["EXT_F77_HEADERS"]=""
S["EXT_CXX_HEADERS"]=""
S["EXT_C_HEADERS"]=""
S["EXT_ompi_FRAMEWORK_LIBS"]=" $(EXT_mpiext_STATIC_LTLIBS)"
S["EXT_ompi_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]=" $(EXT_mpiext_STATIC_SUBDIRS)"
S["EXT_ompi_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]=" $(EXT_mpiext_ALL_SUBDIRS)"
S["EXT_ompi_FRAMEWORKS_SUBDIRS"]=" mpiext"
S["EXT_ompi_FRAMEWORKS"]=" mpiext"
S["EXT_mpiext_STATIC_SUBDIRS"]=""
S["EXT_mpiext_ALL_SUBDIRS"]=" mpiext/affinity mpiext/example"
S["EXT_mpiext_STATIC_LTLIBS"]=""
S["EXT_mpiext_STATIC_COMPONENTS"]=""
S["EXT_mpiext_ALL_COMPONENTS"]=" affinity example"
S["MCA_PROJECT_SUBDIRS"]=" opal orte ompi"
S["MCA_mtl_DIRECT_CALL_HEADER"]=""
S["MCA_pml_DIRECT_CALL_HEADER"]=""
S["MCA_ompi_FRAMEWORK_LIBS"]=" mca/allocator/libmca_allocator.la $(MCA_allocator_STATIC_LTLIBS) mca/bml/libmca_bml.la $(MCA_bml_STATIC_LTLIBS) mca/btl/libmca_btl.la $(MCA_btl_STA"\
"TIC_LTLIBS) mca/coll/libmca_coll.la $(MCA_coll_STATIC_LTLIBS) $(MCA_common_STATIC_LTLIBS) mca/crcp/libmca_crcp.la $(MCA_crcp_STATIC_LTLIBS) mca/dpm/"\
"libmca_dpm.la $(MCA_dpm_STATIC_LTLIBS) mca/io/libmca_io.la $(MCA_io_STATIC_LTLIBS) mca/mpool/libmca_mpool.la $(MCA_mpool_STATIC_LTLIBS) mca/mtl/libm"\
"ca_mtl.la $(MCA_mtl_STATIC_LTLIBS) mca/op/libmca_op.la $(MCA_op_STATIC_LTLIBS) mca/osc/libmca_osc.la $(MCA_osc_STATIC_LTLIBS) mca/pml/libmca_pml.la "\
"$(MCA_pml_STATIC_LTLIBS) mca/pubsub/libmca_pubsub.la $(MCA_pubsub_STATIC_LTLIBS) mca/rcache/libmca_rcache.la $(MCA_rcache_STATIC_LTLIBS) mca/topo/li"\
"bmca_topo.la $(MCA_topo_STATIC_LTLIBS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]="$(MCA_common_STATIC_SUBDIRS)  $(MCA_allocator_STATIC_SUBDIRS) $(MCA_bml_STATIC_SUBDIRS) $(MCA_btl_STATIC_SUBDIRS) $(MCA_coll_STATIC_SUBDIRS) $(MCA_c"\
"rcp_STATIC_SUBDIRS) $(MCA_dpm_STATIC_SUBDIRS) $(MCA_io_STATIC_SUBDIRS) $(MCA_mpool_STATIC_SUBDIRS) $(MCA_mtl_STATIC_SUBDIRS) $(MCA_op_STATIC_SUBDIRS"\
") $(MCA_osc_STATIC_SUBDIRS) $(MCA_pml_STATIC_SUBDIRS) $(MCA_pubsub_STATIC_SUBDIRS) $(MCA_rcache_STATIC_SUBDIRS) $(MCA_topo_STATIC_SUBDIRS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]="$(MCA_common_DSO_SUBDIRS)  $(MCA_allocator_DSO_SUBDIRS) $(MCA_bml_DSO_SUBDIRS) $(MCA_btl_DSO_SUBDIRS) $(MCA_coll_DSO_SUBDIRS) $(MCA_crcp_DSO_SUBDIRS"\
") $(MCA_dpm_DSO_SUBDIRS) $(MCA_io_DSO_SUBDIRS) $(MCA_mpool_DSO_SUBDIRS) $(MCA_mtl_DSO_SUBDIRS) $(MCA_op_DSO_SUBDIRS) $(MCA_osc_DSO_SUBDIRS) $(MCA_pm"\
"l_DSO_SUBDIRS) $(MCA_pubsub_DSO_SUBDIRS) $(MCA_rcache_DSO_SUBDIRS) $(MCA_topo_DSO_SUBDIRS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]="$(MCA_common_ALL_SUBDIRS)  $(MCA_allocator_ALL_SUBDIRS) $(MCA_bml_ALL_SUBDIRS) $(MCA_btl_ALL_SUBDIRS) $(MCA_coll_ALL_SUBDIRS) $(MCA_crcp_ALL_SUBDIRS"\
") $(MCA_dpm_ALL_SUBDIRS) $(MCA_io_ALL_SUBDIRS) $(MCA_mpool_ALL_SUBDIRS) $(MCA_mtl_ALL_SUBDIRS) $(MCA_op_ALL_SUBDIRS) $(MCA_osc_ALL_SUBDIRS) $(MCA_pm"\
"l_ALL_SUBDIRS) $(MCA_pubsub_ALL_SUBDIRS) $(MCA_rcache_ALL_SUBDIRS) $(MCA_topo_ALL_SUBDIRS)"
S["MCA_ompi_FRAMEWORKS_SUBDIRS"]="mca/common  mca/allocator mca/bml mca/btl mca/coll mca/crcp mca/dpm mca/io mca/mpool mca/mtl mca/op mca/osc mca/pml mca/pubsub mca/rcache mca/topo"
S["MCA_ompi_FRAMEWORKS"]="common  allocator bml btl coll crcp dpm io mpool mtl op osc pml pubsub rcache topo"
S["MCA_topo_DSO_SUBDIRS"]=" mca/topo/unity"
S["MCA_topo_STATIC_SUBDIRS"]=""
S["MCA_topo_ALL_SUBDIRS"]=" mca/topo/unity"
S["MCA_topo_STATIC_LTLIBS"]=""
S["MCA_topo_DSO_COMPONENTS"]=" unity"
S["MCA_topo_STATIC_COMPONENTS"]=""
S["MCA_topo_ALL_COMPONENTS"]=" unity"
S["OMPI_BUILD_topo_unity_DSO_FALSE"]="#"
S["OMPI_BUILD_topo_unity_DSO_TRUE"]=""
S["MCA_rcache_DSO_SUBDIRS"]=" mca/rcache/vma"
S["MCA_rcache_STATIC_SUBDIRS"]=""
S["MCA_rcache_ALL_SUBDIRS"]=" mca/rcache/vma"
S["MCA_rcache_STATIC_LTLIBS"]=""
S["MCA_rcache_DSO_COMPONENTS"]=" vma"
S["MCA_rcache_STATIC_COMPONENTS"]=""
S["MCA_rcache_ALL_COMPONENTS"]=" vma"
S["OMPI_BUILD_rcache_vma_DSO_FALSE"]="#"
S["OMPI_BUILD_rcache_vma_DSO_TRUE"]=""
S["MCA_pubsub_DSO_SUBDIRS"]=" mca/pubsub/orte"
S["MCA_pubsub_STATIC_SUBDIRS"]=""
S["MCA_pubsub_ALL_SUBDIRS"]=" mca/pubsub/orte mca/pubsub/pmi"
S["MCA_pubsub_STATIC_LTLIBS"]=""
S["MCA_pubsub_DSO_COMPONENTS"]=" orte"
S["MCA_pubsub_STATIC_COMPONENTS"]=""
S["MCA_pubsub_ALL_COMPONENTS"]=" orte pmi"
S["OMPI_BUILD_pubsub_pmi_DSO_FALSE"]="#"
S["OMPI_BUILD_pubsub_pmi_DSO_TRUE"]=""
S["pubsub_pmi_LIBS"]=""
S["pubsub_pmi_LDFLAGS"]=""
S["pubsub_pmi_CPPFLAGS"]=""
S["OMPI_BUILD_pubsub_orte_DSO_FALSE"]="#"
S["OMPI_BUILD_pubsub_orte_DSO_TRUE"]=""
S["MCA_pml_DSO_SUBDIRS"]=" mca/pml/bfo mca/pml/cm mca/pml/csum mca/pml/ob1 mca/pml/v"
S["MCA_pml_STATIC_SUBDIRS"]=""
S["MCA_pml_ALL_SUBDIRS"]=" mca/pml/bfo mca/pml/cm mca/pml/csum mca/pml/ob1 mca/pml/crcpw mca/pml/v"
S["MCA_pml_STATIC_LTLIBS"]=""
S["MCA_pml_DSO_COMPONENTS"]=" bfo cm csum ob1 v"
S["MCA_pml_STATIC_COMPONENTS"]=""
S["MCA_pml_ALL_COMPONENTS"]=" bfo cm csum ob1 crcpw v"
S["OMPI_BUILD_pml_v_DSO_FALSE"]="#"
S["OMPI_BUILD_pml_v_DSO_TRUE"]=""
S["MCA_vprotocol_DSO_SUBDIRS"]=" mca/vprotocol/pessimist"
S["MCA_vprotocol_STATIC_SUBDIRS"]=""
S["MCA_vprotocol_ALL_SUBDIRS"]=" mca/vprotocol/pessimist"
S["MCA_vprotocol_STATIC_LTLIBS"]=""
S["MCA_vprotocol_DSO_COMPONENTS"]=" pessimist"
S["MCA_vprotocol_STATIC_COMPONENTS"]=""
S["MCA_vprotocol_ALL_COMPONENTS"]=" pessimist"
S["OMPI_BUILD_vprotocol_pessimist_DSO_FALSE"]="#"
S["OMPI_BUILD_vprotocol_pessimist_DSO_TRUE"]=""
S["OMPI_BUILD_pml_crcpw_DSO_FALSE"]="#"
S["OMPI_BUILD_pml_crcpw_DSO_TRUE"]=""
S["OMPI_BUILD_pml_ob1_DSO_FALSE"]="#"
S["OMPI_BUILD_pml_ob1_DSO_TRUE"]=""
S["OMPI_BUILD_pml_csum_DSO_FALSE"]="#"
S["OMPI_BUILD_pml_csum_DSO_TRUE"]=""
S["OMPI_BUILD_pml_cm_DSO_FALSE"]="#"
S["OMPI_BUILD_pml_cm_DSO_TRUE"]=""
S["OMPI_BUILD_pml_bfo_DSO_FALSE"]="#"
S["OMPI_BUILD_pml_bfo_DSO_TRUE"]=""
S["MCA_osc_DSO_SUBDIRS"]=" mca/osc/pt2pt mca/osc/rdma"
S["MCA_osc_STATIC_SUBDIRS"]=""
S["MCA_osc_ALL_SUBDIRS"]=" mca/osc/pt2pt mca/osc/rdma"
S["MCA_osc_STATIC_LTLIBS"]=""
S["MCA_osc_DSO_COMPONENTS"]=" pt2pt rdma"
S["MCA_osc_STATIC_COMPONENTS"]=""
S["MCA_osc_ALL_COMPONENTS"]=" pt2pt rdma"
S["OMPI_BUILD_osc_rdma_DSO_FALSE"]="#"
S["OMPI_BUILD_osc_rdma_DSO_TRUE"]=""
S["OMPI_BUILD_osc_pt2pt_DSO_FALSE"]="#"
S["OMPI_BUILD_osc_pt2pt_DSO_TRUE"]=""
S["MCA_op_DSO_SUBDIRS"]=""
S["MCA_op_STATIC_SUBDIRS"]=""
S["MCA_op_ALL_SUBDIRS"]=""
S["MCA_op_STATIC_LTLIBS"]=""
S["MCA_op_DSO_COMPONENTS"]=""
S["MCA_op_STATIC_COMPONENTS"]=""
S["MCA_op_ALL_COMPONENTS"]=""
S["MCA_mtl_DSO_SUBDIRS"]=""
S["MCA_mtl_STATIC_SUBDIRS"]=""
S["MCA_mtl_ALL_SUBDIRS"]=" mca/mtl/mx mca/mtl/mxm mca/mtl/portals mca/mtl/psm"
S["MCA_mtl_STATIC_LTLIBS"]=""
S["MCA_mtl_DSO_COMPONENTS"]=""
S["MCA_mtl_STATIC_COMPONENTS"]=""
S["MCA_mtl_ALL_COMPONENTS"]=" mx mxm portals psm"
S["OMPI_BUILD_mtl_psm_DSO_FALSE"]="#"
S["OMPI_BUILD_mtl_psm_DSO_TRUE"]=""
S["mtl_psm_LIBS"]=""
S["mtl_psm_LDFLAGS"]=""
S["mtl_psm_CPPFLAGS"]=""
S["mtl_psm_CFLAGS"]=""
S["OMPI_BUILD_mtl_portals_DSO_FALSE"]="#"
S["OMPI_BUILD_mtl_portals_DSO_TRUE"]=""
S["mtl_portals_LIBS"]=""
S["mtl_portals_LDFLAGS"]=""
S["mtl_portals_CPPFLAGS"]=""
S["OMPI_BUILD_mtl_mxm_DSO_FALSE"]="#"
S["OMPI_BUILD_mtl_mxm_DSO_TRUE"]=""
S["mtl_mxm_LIBS"]=""
S["mtl_mxm_LDFLAGS"]=""
S["mtl_mxm_CPPFLAGS"]=""
S["mtl_mxm_CFLAGS"]=""
S["OMPI_BUILD_mtl_mx_DSO_FALSE"]="#"
S["OMPI_BUILD_mtl_mx_DSO_TRUE"]=""
S["mtl_mx_LIBS"]=""
S["mtl_mx_LDFLAGS"]=""
S["mtl_mx_CPPFLAGS"]=""
S["mtl_mx_CFLAGS"]=""
S["MCA_mpool_DSO_SUBDIRS"]=" mca/mpool/fake mca/mpool/rdma mca/mpool/sm"
S["MCA_mpool_STATIC_SUBDIRS"]=""
S["MCA_mpool_ALL_SUBDIRS"]=" mca/mpool/fake mca/mpool/rdma mca/mpool/sm"
S["MCA_mpool_STATIC_LTLIBS"]=""
S["MCA_mpool_DSO_COMPONENTS"]=" fake rdma sm"
S["MCA_mpool_STATIC_COMPONENTS"]=""
S["MCA_mpool_ALL_COMPONENTS"]=" fake rdma sm"
S["OMPI_BUILD_mpool_sm_DSO_FALSE"]="#"
S["OMPI_BUILD_mpool_sm_DSO_TRUE"]=""
S["OMPI_BUILD_mpool_rdma_DSO_FALSE"]="#"
S["OMPI_BUILD_mpool_rdma_DSO_TRUE"]=""
S["OMPI_BUILD_mpool_fake_DSO_FALSE"]="#"
S["OMPI_BUILD_mpool_fake_DSO_TRUE"]=""
S["OMPI_MPIF_MPI_IO_INCLUDE"]="include \"mpif-mpi-io.h\""
S["OMPI_PROVIDE_MPI_FILE_INTERFACE_FALSE"]="#"
S["OMPI_PROVIDE_MPI_FILE_INTERFACE_TRUE"]=""
S["MCA_io_DSO_SUBDIRS"]=" mca/io/romio"
S["MCA_io_STATIC_SUBDIRS"]=""
S["MCA_io_ALL_SUBDIRS"]=" mca/io/romio"
S["MCA_io_STATIC_LTLIBS"]=""
S["MCA_io_DSO_COMPONENTS"]=" romio"
S["MCA_io_STATIC_COMPONENTS"]=""
S["MCA_io_ALL_COMPONENTS"]=" romio"
S["OMPI_BUILD_io_romio_DSO_FALSE"]="#"
S["OMPI_BUILD_io_romio_DSO_TRUE"]=""
S["MCA_io_romio_SHOULD_BUILD_FALSE"]="#"
S["MCA_io_romio_SHOULD_BUILD_TRUE"]=""
S["MCA_dpm_DSO_SUBDIRS"]=" mca/dpm/orte"
S["MCA_dpm_STATIC_SUBDIRS"]=""
S["MCA_dpm_ALL_SUBDIRS"]=" mca/dpm/orte"
S["MCA_dpm_STATIC_LTLIBS"]=""
S["MCA_dpm_DSO_COMPONENTS"]=" orte"
S["MCA_dpm_STATIC_COMPONENTS"]=""
S["MCA_dpm_ALL_COMPONENTS"]=" orte"
S["OMPI_BUILD_dpm_orte_DSO_FALSE"]="#"
S["OMPI_BUILD_dpm_orte_DSO_TRUE"]=""
S["MCA_crcp_DSO_SUBDIRS"]=""
S["MCA_crcp_STATIC_SUBDIRS"]=""
S["MCA_crcp_ALL_SUBDIRS"]=" mca/crcp/bkmrk"
S["MCA_crcp_STATIC_LTLIBS"]=""
S["MCA_crcp_DSO_COMPONENTS"]=""
S["MCA_crcp_STATIC_COMPONENTS"]=""
S["MCA_crcp_ALL_COMPONENTS"]=" bkmrk"
S["OMPI_BUILD_crcp_bkmrk_DSO_FALSE"]="#"
S["OMPI_BUILD_crcp_bkmrk_DSO_TRUE"]=""
S["MCA_common_DSO_SUBDIRS"]=" mca/common/sm"
S["MCA_common_STATIC_SUBDIRS"]=""
S["MCA_common_ALL_SUBDIRS"]=" mca/common/sm mca/common/mx mca/common/portals"
S["MCA_common_STATIC_LTLIBS"]=""
S["MCA_common_DSO_COMPONENTS"]=" sm"
S["MCA_common_STATIC_COMPONENTS"]=""
S["MCA_common_ALL_COMPONENTS"]=" sm mx portals"
S["OMPI_BUILD_common_portals_DSO_FALSE"]="#"
S["OMPI_BUILD_common_portals_DSO_TRUE"]=""
S["common_portals_LIBS"]="-lp3utcp -lp3api -lp3lib -lp3rt -lp3utcp"
S["common_portals_LDFLAGS"]=""
S["common_portals_CPPFLAGS"]=""
S["OMPI_BUILD_common_mx_DSO_FALSE"]="#"
S["OMPI_BUILD_common_mx_DSO_TRUE"]=""
S["common_mx_LIBS"]=""
S["common_mx_LDFLAGS"]=""
S["common_mx_CPPFLAGS"]=""
S["common_mx_CFLAGS"]=""
S["OMPI_BUILD_common_sm_DSO_FALSE"]="#"
S["OMPI_BUILD_common_sm_DSO_TRUE"]=""
S["MCA_coll_DSO_SUBDIRS"]=" mca/coll/basic mca/coll/hierarch mca/coll/inter mca/coll/self mca/coll/sm mca/coll/sync mca/coll/tuned"
S["MCA_coll_STATIC_SUBDIRS"]=""
S["MCA_coll_ALL_SUBDIRS"]=" mca/coll/basic mca/coll/hierarch mca/coll/inter mca/coll/self mca/coll/sm mca/coll/sync mca/coll/tuned mca/coll/fca"
S["MCA_coll_STATIC_LTLIBS"]=""
S["MCA_coll_DSO_COMPONENTS"]=" basic hierarch inter self sm sync tuned"
S["MCA_coll_STATIC_COMPONENTS"]=""
S["MCA_coll_ALL_COMPONENTS"]=" basic hierarch inter self sm sync tuned fca"
S["OMPI_BUILD_coll_fca_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_fca_DSO_TRUE"]=""
S["coll_fca_HOME"]=""
S["coll_fca_LIBS"]=""
S["coll_fca_LDFLAGS"]=""
S["coll_fca_CPPFLAGS"]=""
S["coll_fca_CFLAGS"]=""
S["OMPI_BUILD_coll_tuned_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_tuned_DSO_TRUE"]=""
S["OMPI_BUILD_coll_sync_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_sync_DSO_TRUE"]=""
S["OMPI_BUILD_coll_sm_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_sm_DSO_TRUE"]=""
S["OMPI_BUILD_coll_self_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_self_DSO_TRUE"]=""
S["OMPI_BUILD_coll_inter_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_inter_DSO_TRUE"]=""
S["OMPI_BUILD_coll_hierarch_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_hierarch_DSO_TRUE"]=""
S["OMPI_BUILD_coll_basic_DSO_FALSE"]="#"
S["OMPI_BUILD_coll_basic_DSO_TRUE"]=""
S["MCA_btl_DSO_SUBDIRS"]=" mca/btl/self mca/btl/sm mca/btl/tcp"
S["MCA_btl_STATIC_SUBDIRS"]=""
S["MCA_btl_ALL_SUBDIRS"]=" mca/btl/self mca/btl/elan mca/btl/mx mca/btl/ofud mca/btl/openib mca/btl/portals mca/btl/sctp mca/btl/sm mca/btl/tcp mca/btl/udapl"
S["MCA_btl_STATIC_LTLIBS"]=""
S["MCA_btl_DSO_COMPONENTS"]=" self sm tcp"
S["MCA_btl_STATIC_COMPONENTS"]=""
S["MCA_btl_ALL_COMPONENTS"]=" self elan mx ofud openib portals sctp sm tcp udapl"
S["OMPI_BUILD_btl_udapl_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_udapl_DSO_TRUE"]=""
S["btl_udapl_LIBS"]=""
S["btl_udapl_LDFLAGS"]=""
S["btl_udapl_CPPFLAGS"]=""
S["btl_udapl_CFLAGS"]="-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing"
S["OMPI_BUILD_btl_tcp_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_tcp_DSO_TRUE"]=""
S["OMPI_BUILD_btl_sm_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_sm_DSO_TRUE"]=""
S["btl_sm_CPPFLAGS"]=""
S["OMPI_BUILD_btl_sctp_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_sctp_DSO_TRUE"]=""
S["btl_sctp_LIBS"]=""
S["btl_sctp_LDFLAGS"]=""
S["btl_sctp_CPPFLAGS"]=""
S["btl_sctp_CFLAGS"]="-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing -DFREEBSD"
S["OMPI_BUILD_btl_portals_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_portals_DSO_TRUE"]=""
S["btl_portals_LIBS"]=""
S["btl_portals_LDFLAGS"]=""
S["btl_portals_CPPFLAGS"]=""
S["OMPI_BUILD_btl_openib_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_openib_DSO_TRUE"]=""
S["MCA_btl_openib_have_dynamic_sl_FALSE"]=""
S["MCA_btl_openib_have_dynamic_sl_TRUE"]="#"
S["MCA_btl_openib_have_rdmacm_FALSE"]=""
S["MCA_btl_openib_have_rdmacm_TRUE"]="#"
S["MCA_btl_openib_have_xrc_FALSE"]=""
S["MCA_btl_openib_have_xrc_TRUE"]="#"
S["btl_openib_LIBS"]=""
S["btl_openib_LDFLAGS"]=""
S["btl_openib_CPPFLAGS"]=""
S["btl_openib_CFLAGS"]=""
S["MCA_btl_openib_enable_failover_FALSE"]=""
S["MCA_btl_openib_enable_failover_TRUE"]="#"
S["OMPI_BUILD_btl_ofud_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_ofud_DSO_TRUE"]=""
S["btl_ofud_LIBS"]=""
S["btl_ofud_LDFLAGS"]=""
S["btl_ofud_CPPFLAGS"]=""
S["btl_ofud_CFLAGS"]=""
S["OMPI_BUILD_btl_mx_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_mx_DSO_TRUE"]=""
S["btl_mx_LIBS"]=""
S["btl_mx_LDFLAGS"]=""
S["btl_mx_CPPFLAGS"]=""
S["btl_mx_CFLAGS"]=""
S["OMPI_BUILD_btl_elan_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_elan_DSO_TRUE"]=""
S["btl_elan_LIBS"]=""
S["btl_elan_LDFLAGS"]=""
S["btl_elan_CPPFLAGS"]=""
S["btl_elan_CFLAGS"]=""
S["OMPI_BUILD_btl_self_DSO_FALSE"]="#"
S["OMPI_BUILD_btl_self_DSO_TRUE"]=""
S["MCA_bml_DSO_SUBDIRS"]=" mca/bml/r2"
S["MCA_bml_STATIC_SUBDIRS"]=""
S["MCA_bml_ALL_SUBDIRS"]=" mca/bml/r2"
S["MCA_bml_STATIC_LTLIBS"]=""
S["MCA_bml_DSO_COMPONENTS"]=" r2"
S["MCA_bml_STATIC_COMPONENTS"]=""
S["MCA_bml_ALL_COMPONENTS"]=" r2"
S["OMPI_BUILD_bml_r2_DSO_FALSE"]="#"
S["OMPI_BUILD_bml_r2_DSO_TRUE"]=""
S["MCA_allocator_DSO_SUBDIRS"]=" mca/allocator/basic mca/allocator/bucket"
S["MCA_allocator_STATIC_SUBDIRS"]=""
S["MCA_allocator_ALL_SUBDIRS"]=" mca/allocator/basic mca/allocator/bucket"
S["MCA_allocator_STATIC_LTLIBS"]=""
S["MCA_allocator_DSO_COMPONENTS"]=" basic bucket"
S["MCA_allocator_STATIC_COMPONENTS"]=""
S["MCA_allocator_ALL_COMPONENTS"]=" basic bucket"
S["OMPI_BUILD_allocator_bucket_DSO_FALSE"]="#"
S["OMPI_BUILD_allocator_bucket_DSO_TRUE"]=""
S["OMPI_BUILD_allocator_basic_DSO_FALSE"]="#"
S["OMPI_BUILD_allocator_basic_DSO_TRUE"]=""
S["MCA_orte_FRAMEWORK_LIBS"]=" mca/errmgr/libmca_errmgr.la $(MCA_errmgr_STATIC_LTLIBS) mca/ess/libmca_ess.la $(MCA_ess_STATIC_LTLIBS) mca/filem/libmca_filem.la $(MCA_filem_STATIC"\
"_LTLIBS) mca/grpcomm/libmca_grpcomm.la $(MCA_grpcomm_STATIC_LTLIBS) mca/iof/libmca_iof.la $(MCA_iof_STATIC_LTLIBS) mca/notifier/libmca_notifier.la $"\
"(MCA_notifier_STATIC_LTLIBS) mca/odls/libmca_odls.la $(MCA_odls_STATIC_LTLIBS) mca/oob/libmca_oob.la $(MCA_oob_STATIC_LTLIBS) mca/plm/libmca_plm.la "\
"$(MCA_plm_STATIC_LTLIBS) mca/ras/libmca_ras.la $(MCA_ras_STATIC_LTLIBS) mca/rmaps/libmca_rmaps.la $(MCA_rmaps_STATIC_LTLIBS) mca/rml/libmca_rml.la $"\
"(MCA_rml_STATIC_LTLIBS) mca/routed/libmca_routed.la $(MCA_routed_STATIC_LTLIBS) mca/snapc/libmca_snapc.la $(MCA_snapc_STATIC_LTLIBS)"
S["MCA_orte_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]=" $(MCA_errmgr_STATIC_SUBDIRS) $(MCA_ess_STATIC_SUBDIRS) $(MCA_filem_STATIC_SUBDIRS) $(MCA_grpcomm_STATIC_SUBDIRS) $(MCA_iof_STATIC_SUBDIRS) $(MCA_no"\
"tifier_STATIC_SUBDIRS) $(MCA_odls_STATIC_SUBDIRS) $(MCA_oob_STATIC_SUBDIRS) $(MCA_plm_STATIC_SUBDIRS) $(MCA_ras_STATIC_SUBDIRS) $(MCA_rmaps_STATIC_S"\
"UBDIRS) $(MCA_rml_STATIC_SUBDIRS) $(MCA_routed_STATIC_SUBDIRS) $(MCA_snapc_STATIC_SUBDIRS)"
S["MCA_orte_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]=" $(MCA_errmgr_DSO_SUBDIRS) $(MCA_ess_DSO_SUBDIRS) $(MCA_filem_DSO_SUBDIRS) $(MCA_grpcomm_DSO_SUBDIRS) $(MCA_iof_DSO_SUBDIRS) $(MCA_notifier_DSO_SUBD"\
"IRS) $(MCA_odls_DSO_SUBDIRS) $(MCA_oob_DSO_SUBDIRS) $(MCA_plm_DSO_SUBDIRS) $(MCA_ras_DSO_SUBDIRS) $(MCA_rmaps_DSO_SUBDIRS) $(MCA_rml_DSO_SUBDIRS) $("\
"MCA_routed_DSO_SUBDIRS) $(MCA_snapc_DSO_SUBDIRS)"
S["MCA_orte_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]=" $(MCA_errmgr_ALL_SUBDIRS) $(MCA_ess_ALL_SUBDIRS) $(MCA_filem_ALL_SUBDIRS) $(MCA_grpcomm_ALL_SUBDIRS) $(MCA_iof_ALL_SUBDIRS) $(MCA_notifier_ALL_SUBD"\
"IRS) $(MCA_odls_ALL_SUBDIRS) $(MCA_oob_ALL_SUBDIRS) $(MCA_plm_ALL_SUBDIRS) $(MCA_ras_ALL_SUBDIRS) $(MCA_rmaps_ALL_SUBDIRS) $(MCA_rml_ALL_SUBDIRS) $("\
"MCA_routed_ALL_SUBDIRS) $(MCA_snapc_ALL_SUBDIRS)"
S["MCA_orte_FRAMEWORKS_SUBDIRS"]=" mca/errmgr mca/ess mca/filem mca/grpcomm mca/iof mca/notifier mca/odls mca/oob mca/plm mca/ras mca/rmaps mca/rml mca/routed mca/snapc"
S["MCA_orte_FRAMEWORKS"]=" errmgr ess filem grpcomm iof notifier odls oob plm ras rmaps rml routed snapc"
S["MCA_snapc_DSO_SUBDIRS"]=""
S["MCA_snapc_STATIC_SUBDIRS"]=""
S["MCA_snapc_ALL_SUBDIRS"]=" mca/snapc/full"
S["MCA_snapc_STATIC_LTLIBS"]=""
S["MCA_snapc_DSO_COMPONENTS"]=""
S["MCA_snapc_STATIC_COMPONENTS"]=""
S["MCA_snapc_ALL_COMPONENTS"]=" full"
S["OMPI_BUILD_snapc_full_DSO_FALSE"]="#"
S["OMPI_BUILD_snapc_full_DSO_TRUE"]=""
S["MCA_routed_DSO_SUBDIRS"]=" mca/routed/binomial mca/routed/cm mca/routed/direct mca/routed/linear mca/routed/radix mca/routed/slave"
S["MCA_routed_STATIC_SUBDIRS"]=""
S["MCA_routed_ALL_SUBDIRS"]=" mca/routed/binomial mca/routed/cm mca/routed/direct mca/routed/linear mca/routed/radix mca/routed/slave"
S["MCA_routed_STATIC_LTLIBS"]=""
S["MCA_routed_DSO_COMPONENTS"]=" binomial cm direct linear radix slave"
S["MCA_routed_STATIC_COMPONENTS"]=""
S["MCA_routed_ALL_COMPONENTS"]=" binomial cm direct linear radix slave"
S["OMPI_BUILD_routed_slave_DSO_FALSE"]="#"
S["OMPI_BUILD_routed_slave_DSO_TRUE"]=""
S["OMPI_BUILD_routed_radix_DSO_FALSE"]="#"
S["OMPI_BUILD_routed_radix_DSO_TRUE"]=""
S["OMPI_BUILD_routed_linear_DSO_FALSE"]="#"
S["OMPI_BUILD_routed_linear_DSO_TRUE"]=""
S["OMPI_BUILD_routed_direct_DSO_FALSE"]="#"
S["OMPI_BUILD_routed_direct_DSO_TRUE"]=""
S["OMPI_BUILD_routed_cm_DSO_FALSE"]="#"
S["OMPI_BUILD_routed_cm_DSO_TRUE"]=""
S["OMPI_BUILD_routed_binomial_DSO_FALSE"]="#"
S["OMPI_BUILD_routed_binomial_DSO_TRUE"]=""
S["MCA_rml_DSO_SUBDIRS"]=" mca/rml/oob"
S["MCA_rml_STATIC_SUBDIRS"]=""
S["MCA_rml_ALL_SUBDIRS"]=" mca/rml/oob mca/rml/ftrm"
S["MCA_rml_STATIC_LTLIBS"]=""
S["MCA_rml_DSO_COMPONENTS"]=" oob"
S["MCA_rml_STATIC_COMPONENTS"]=""
S["MCA_rml_ALL_COMPONENTS"]=" oob ftrm"
S["OMPI_BUILD_rml_ftrm_DSO_FALSE"]="#"
S["OMPI_BUILD_rml_ftrm_DSO_TRUE"]=""
S["OMPI_BUILD_rml_oob_DSO_FALSE"]="#"
S["OMPI_BUILD_rml_oob_DSO_TRUE"]=""
S["MCA_rmaps_DSO_SUBDIRS"]=" mca/rmaps/load_balance mca/rmaps/rank_file mca/rmaps/resilient mca/rmaps/round_robin mca/rmaps/seq mca/rmaps/topo"
S["MCA_rmaps_STATIC_SUBDIRS"]=""
S["MCA_rmaps_ALL_SUBDIRS"]=" mca/rmaps/load_balance mca/rmaps/rank_file mca/rmaps/resilient mca/rmaps/round_robin mca/rmaps/seq mca/rmaps/topo"
S["MCA_rmaps_STATIC_LTLIBS"]=""
S["MCA_rmaps_DSO_COMPONENTS"]=" load_balance rank_file resilient round_robin seq topo"
S["MCA_rmaps_STATIC_COMPONENTS"]=""
S["MCA_rmaps_ALL_COMPONENTS"]=" load_balance rank_file resilient round_robin seq topo"
S["OMPI_BUILD_rmaps_topo_DSO_FALSE"]="#"
S["OMPI_BUILD_rmaps_topo_DSO_TRUE"]=""
S["OMPI_BUILD_rmaps_seq_DSO_FALSE"]="#"
S["OMPI_BUILD_rmaps_seq_DSO_TRUE"]=""
S["OMPI_BUILD_rmaps_round_robin_DSO_FALSE"]="#"
S["OMPI_BUILD_rmaps_round_robin_DSO_TRUE"]=""
S["OMPI_BUILD_rmaps_resilient_DSO_FALSE"]="#"
S["OMPI_BUILD_rmaps_resilient_DSO_TRUE"]=""
S["OMPI_BUILD_rmaps_rank_file_DSO_FALSE"]="#"
S["OMPI_BUILD_rmaps_rank_file_DSO_TRUE"]=""
S["OMPI_BUILD_rmaps_load_balance_DSO_FALSE"]="#"
S["OMPI_BUILD_rmaps_load_balance_DSO_TRUE"]=""
S["MCA_ras_DSO_SUBDIRS"]=" mca/ras/cm mca/ras/slurm"
S["MCA_ras_STATIC_SUBDIRS"]=""
S["MCA_ras_ALL_SUBDIRS"]=" mca/ras/cm mca/ras/alps mca/ras/ccp mca/ras/gridengine mca/ras/loadleveler mca/ras/lsf mca/ras/slurm mca/ras/tm"
S["MCA_ras_STATIC_LTLIBS"]=""
S["MCA_ras_DSO_COMPONENTS"]=" cm slurm"
S["MCA_ras_STATIC_COMPONENTS"]=""
S["MCA_ras_ALL_COMPONENTS"]=" cm alps ccp gridengine loadleveler lsf slurm tm"
S["OMPI_BUILD_ras_tm_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_tm_DSO_TRUE"]=""
S["ras_tm_LIBS"]=""
S["ras_tm_LDFLAGS"]=""
S["ras_tm_CPPFLAGS"]=""
S["OMPI_BUILD_ras_slurm_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_slurm_DSO_TRUE"]=""
S["ras_slurm_LIBS"]=""
S["ras_slurm_LDFLAGS"]=""
S["ras_slurm_CPPFLAGS"]=""
S["OMPI_BUILD_ras_lsf_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_lsf_DSO_TRUE"]=""
S["ras_lsf_LIBS"]=""
S["ras_lsf_LDFLAGS"]=""
S["ras_lsf_CPPFLAGS"]=""
S["OMPI_BUILD_ras_loadleveler_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_loadleveler_DSO_TRUE"]=""
S["ras_loadleveler_LIBS"]=""
S["ras_loadleveler_LDFLAGS"]=""
S["ras_loadleveler_CPPFLAGS"]=""
S["OMPI_BUILD_ras_gridengine_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_gridengine_DSO_TRUE"]=""
S["QRSH"]=""
S["OMPI_BUILD_ras_ccp_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_ccp_DSO_TRUE"]=""
S["OMPI_BUILD_ras_alps_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_alps_DSO_TRUE"]=""
S["OMPI_BUILD_ras_cm_DSO_FALSE"]="#"
S["OMPI_BUILD_ras_cm_DSO_TRUE"]=""
S["MCA_plm_DSO_SUBDIRS"]=" mca/plm/rsh mca/plm/slurm"
S["MCA_plm_STATIC_SUBDIRS"]=""
S["MCA_plm_ALL_SUBDIRS"]=" mca/plm/alps mca/plm/ccp mca/plm/lsf mca/plm/process mca/plm/rsh mca/plm/slurm mca/plm/tm"
S["MCA_plm_STATIC_LTLIBS"]=""
S["MCA_plm_DSO_COMPONENTS"]=" rsh slurm"
S["MCA_plm_STATIC_COMPONENTS"]=""
S["MCA_plm_ALL_COMPONENTS"]=" alps ccp lsf process rsh slurm tm"
S["OMPI_BUILD_plm_tm_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_tm_DSO_TRUE"]=""
S["plm_tm_LIBS"]=""
S["plm_tm_LDFLAGS"]=""
S["plm_tm_CPPFLAGS"]=""
S["OMPI_BUILD_plm_slurm_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_slurm_DSO_TRUE"]=""
S["plm_slurm_LIBS"]=""
S["plm_slurm_LDFLAGS"]=""
S["plm_slurm_CPPFLAGS"]=""
S["OMPI_BUILD_plm_rsh_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_rsh_DSO_TRUE"]=""
S["OMPI_BUILD_plm_process_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_process_DSO_TRUE"]=""
S["OMPI_BUILD_plm_lsf_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_lsf_DSO_TRUE"]=""
S["plm_lsf_LIBS"]=""
S["plm_lsf_LDFLAGS"]=""
S["plm_lsf_CPPFLAGS"]=""
S["OMPI_BUILD_plm_ccp_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_ccp_DSO_TRUE"]=""
S["OMPI_BUILD_plm_alps_DSO_FALSE"]="#"
S["OMPI_BUILD_plm_alps_DSO_TRUE"]=""
S["MCA_oob_DSO_SUBDIRS"]=" mca/oob/tcp"
S["MCA_oob_STATIC_SUBDIRS"]=""
S["MCA_oob_ALL_SUBDIRS"]=" mca/oob/tcp"
S["MCA_oob_STATIC_LTLIBS"]=""
S["MCA_oob_DSO_COMPONENTS"]=" tcp"
S["MCA_oob_STATIC_COMPONENTS"]=""
S["MCA_oob_ALL_COMPONENTS"]=" tcp"
S["OMPI_BUILD_oob_tcp_DSO_FALSE"]="#"
S["OMPI_BUILD_oob_tcp_DSO_TRUE"]=""
S["MCA_odls_DSO_SUBDIRS"]=" mca/odls/default"
S["MCA_odls_STATIC_SUBDIRS"]=""
S["MCA_odls_ALL_SUBDIRS"]=" mca/odls/default mca/odls/process"
S["MCA_odls_STATIC_LTLIBS"]=""
S["MCA_odls_DSO_COMPONENTS"]=" default"
S["MCA_odls_STATIC_COMPONENTS"]=""
S["MCA_odls_ALL_COMPONENTS"]=" default process"
S["OMPI_BUILD_odls_process_DSO_FALSE"]="#"
S["OMPI_BUILD_odls_process_DSO_TRUE"]=""
S["OMPI_BUILD_odls_default_DSO_FALSE"]="#"
S["OMPI_BUILD_odls_default_DSO_TRUE"]=""
S["MCA_notifier_DSO_SUBDIRS"]=" mca/notifier/command mca/notifier/syslog"
S["MCA_notifier_STATIC_SUBDIRS"]=""
S["MCA_notifier_ALL_SUBDIRS"]=" mca/notifier/command mca/notifier/ftb mca/notifier/smtp mca/notifier/syslog"
S["MCA_notifier_STATIC_LTLIBS"]=""
S["MCA_notifier_DSO_COMPONENTS"]=" command syslog"
S["MCA_notifier_STATIC_COMPONENTS"]=""
S["MCA_notifier_ALL_COMPONENTS"]=" command ftb smtp syslog"
S["OMPI_BUILD_notifier_syslog_DSO_FALSE"]="#"
S["OMPI_BUILD_notifier_syslog_DSO_TRUE"]=""
S["OMPI_BUILD_notifier_smtp_DSO_FALSE"]="#"
S["OMPI_BUILD_notifier_smtp_DSO_TRUE"]=""
S["notifier_smtp_LIBS"]=""
S["notifier_smtp_LDFLAGS"]=""
S["notifier_smtp_CPPFLAGS"]=""
S["notifier_smtp_CFLAGS"]=""
S["OMPI_BUILD_notifier_ftb_DSO_FALSE"]="#"
S["OMPI_BUILD_notifier_ftb_DSO_TRUE"]=""
S["notifier_ftb_LIBS"]=""
S["notifier_ftb_LDFLAGS"]=""
S["notifier_ftb_CPPFLAGS"]=""
S["notifier_ftb_CFLAGS"]=""
S["OMPI_BUILD_notifier_command_DSO_FALSE"]="#"
S["OMPI_BUILD_notifier_command_DSO_TRUE"]=""
S["MCA_iof_DSO_SUBDIRS"]=" mca/iof/hnp mca/iof/orted mca/iof/tool"
S["MCA_iof_STATIC_SUBDIRS"]=""
S["MCA_iof_ALL_SUBDIRS"]=" mca/iof/hnp mca/iof/orted mca/iof/tool"
S["MCA_iof_STATIC_LTLIBS"]=""
S["MCA_iof_DSO_COMPONENTS"]=" hnp orted tool"
S["MCA_iof_STATIC_COMPONENTS"]=""
S["MCA_iof_ALL_COMPONENTS"]=" hnp orted tool"
S["OMPI_BUILD_iof_tool_DSO_FALSE"]="#"
S["OMPI_BUILD_iof_tool_DSO_TRUE"]=""
S["OMPI_BUILD_iof_orted_DSO_FALSE"]="#"
S["OMPI_BUILD_iof_orted_DSO_TRUE"]=""
S["OMPI_BUILD_iof_hnp_DSO_FALSE"]="#"
S["OMPI_BUILD_iof_hnp_DSO_TRUE"]=""
S["MCA_grpcomm_DSO_SUBDIRS"]=" mca/grpcomm/bad mca/grpcomm/basic mca/grpcomm/hier"
S["MCA_grpcomm_STATIC_SUBDIRS"]=""
S["MCA_grpcomm_ALL_SUBDIRS"]=" mca/grpcomm/cnos mca/grpcomm/bad mca/grpcomm/basic mca/grpcomm/hier mca/grpcomm/pmi"
S["MCA_grpcomm_STATIC_LTLIBS"]=""
S["MCA_grpcomm_DSO_COMPONENTS"]=" bad basic hier"
S["MCA_grpcomm_STATIC_COMPONENTS"]=""
S["MCA_grpcomm_ALL_COMPONENTS"]=" cnos bad basic hier pmi"
S["OMPI_BUILD_grpcomm_pmi_DSO_FALSE"]="#"
S["OMPI_BUILD_grpcomm_pmi_DSO_TRUE"]=""
S["grpcomm_pmi_LIBS"]=""
S["grpcomm_pmi_LDFLAGS"]=""
S["grpcomm_pmi_CPPFLAGS"]=""
S["OMPI_BUILD_grpcomm_hier_DSO_FALSE"]="#"
S["OMPI_BUILD_grpcomm_hier_DSO_TRUE"]=""
S["OMPI_BUILD_grpcomm_basic_DSO_FALSE"]="#"
S["OMPI_BUILD_grpcomm_basic_DSO_TRUE"]=""
S["OMPI_BUILD_grpcomm_bad_DSO_FALSE"]="#"
S["OMPI_BUILD_grpcomm_bad_DSO_TRUE"]=""
S["OMPI_BUILD_grpcomm_cnos_DSO_FALSE"]="#"
S["OMPI_BUILD_grpcomm_cnos_DSO_TRUE"]=""
S["MCA_filem_DSO_SUBDIRS"]=" mca/filem/rsh"
S["MCA_filem_STATIC_SUBDIRS"]=""
S["MCA_filem_ALL_SUBDIRS"]=" mca/filem/rsh"
S["MCA_filem_STATIC_LTLIBS"]=""
S["MCA_filem_DSO_COMPONENTS"]=" rsh"
S["MCA_filem_STATIC_COMPONENTS"]=""
S["MCA_filem_ALL_COMPONENTS"]=" rsh"
S["OMPI_BUILD_filem_rsh_DSO_FALSE"]="#"
S["OMPI_BUILD_filem_rsh_DSO_TRUE"]=""
S["MCA_ess_DSO_SUBDIRS"]=" mca/ess/env mca/ess/hnp mca/ess/singleton mca/ess/slave mca/ess/slurm mca/ess/slurmd mca/ess/tool"
S["MCA_ess_STATIC_SUBDIRS"]=""
S["MCA_ess_ALL_SUBDIRS"]=" mca/ess/portals_utcp mca/ess/cnos mca/ess/alps mca/ess/env mca/ess/hnp mca/ess/lsf mca/ess/pmi mca/ess/singleton mca/ess/slave mca/ess/slurm mca/es"\
"s/slurmd mca/ess/tm mca/ess/tool"
S["MCA_ess_STATIC_LTLIBS"]=""
S["MCA_ess_DSO_COMPONENTS"]=" env hnp singleton slave slurm slurmd tool"
S["MCA_ess_STATIC_COMPONENTS"]=""
S["MCA_ess_ALL_COMPONENTS"]=" portals_utcp cnos alps env hnp lsf pmi singleton slave slurm slurmd tm tool"
S["OMPI_BUILD_ess_tool_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_tool_DSO_TRUE"]=""
S["OMPI_BUILD_ess_tm_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_tm_DSO_TRUE"]=""
S["ess_tm_LIBS"]=""
S["ess_tm_LDFLAGS"]=""
S["ess_tm_CPPFLAGS"]=""
S["OMPI_BUILD_ess_slurmd_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_slurmd_DSO_TRUE"]=""
S["ess_slurmd_LIBS"]=""
S["ess_slurmd_LDFLAGS"]=""
S["ess_slurmd_CPPFLAGS"]=""
S["OMPI_BUILD_ess_slurm_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_slurm_DSO_TRUE"]=""
S["ess_slurm_LIBS"]=""
S["ess_slurm_LDFLAGS"]=""
S["ess_slurm_CPPFLAGS"]=""
S["OMPI_BUILD_ess_slave_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_slave_DSO_TRUE"]=""
S["OMPI_BUILD_ess_singleton_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_singleton_DSO_TRUE"]=""
S["OMPI_BUILD_ess_pmi_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_pmi_DSO_TRUE"]=""
S["ess_pmi_LIBS"]=""
S["ess_pmi_LDFLAGS"]=""
S["ess_pmi_CPPFLAGS"]=""
S["WANT_PMI_SUPPORT_FALSE"]=""
S["WANT_PMI_SUPPORT_TRUE"]="#"
S["OMPI_BUILD_ess_lsf_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_lsf_DSO_TRUE"]=""
S["ess_lsf_LIBS"]=""
S["ess_lsf_LDFLAGS"]=""
S["ess_lsf_CPPFLAGS"]=""
S["OMPI_BUILD_ess_hnp_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_hnp_DSO_TRUE"]=""
S["OMPI_BUILD_ess_env_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_env_DSO_TRUE"]=""
S["OMPI_BUILD_ess_alps_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_alps_DSO_TRUE"]=""
S["OMPI_BUILD_ess_cnos_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_cnos_DSO_TRUE"]=""
S["OMPI_BUILD_ess_portals_utcp_DSO_FALSE"]="#"
S["OMPI_BUILD_ess_portals_utcp_DSO_TRUE"]=""
S["ess_portals_utcp_LIBS"]=""
S["ess_portals_utcp_LDFLAGS"]=""
S["ess_portals_utcp_CPPFLAGS"]=""
S["MCA_errmgr_DSO_SUBDIRS"]=" mca/errmgr/default"
S["MCA_errmgr_STATIC_SUBDIRS"]=""
S["MCA_errmgr_ALL_SUBDIRS"]=" mca/errmgr/default"
S["MCA_errmgr_STATIC_LTLIBS"]=""
S["MCA_errmgr_DSO_COMPONENTS"]=" default"
S["MCA_errmgr_STATIC_COMPONENTS"]=""
S["MCA_errmgr_ALL_COMPONENTS"]=" default"
S["OMPI_BUILD_errmgr_default_DSO_FALSE"]="#"
S["OMPI_BUILD_errmgr_default_DSO_TRUE"]=""
S["MCA_opal_FRAMEWORK_LIBS"]=" mca/backtrace/libmca_backtrace.la $(MCA_backtrace_STATIC_LTLIBS) mca/carto/libmca_carto.la $(MCA_carto_STATIC_LTLIBS) mca/crs/libmca_crs.la $(MCA_c"\
"rs_STATIC_LTLIBS) mca/hwloc/libmca_hwloc.la $(MCA_hwloc_STATIC_LTLIBS) mca/installdirs/libmca_installdirs.la $(MCA_installdirs_STATIC_LTLIBS) mca/ma"\
"ffinity/libmca_maffinity.la $(MCA_maffinity_STATIC_LTLIBS) mca/memchecker/libmca_memchecker.la $(MCA_memchecker_STATIC_LTLIBS) mca/memcpy/libmca_mem"\
"cpy.la $(MCA_memcpy_STATIC_LTLIBS) mca/memory/libmca_memory.la $(MCA_memory_STATIC_LTLIBS) mca/paffinity/libmca_paffinity.la $(MCA_paffinity_STATIC_"\
"LTLIBS) mca/pstat/libmca_pstat.la $(MCA_pstat_STATIC_LTLIBS) mca/shmem/libmca_shmem.la $(MCA_shmem_STATIC_LTLIBS) mca/sysinfo/libmca_sysinfo.la $(MC"\
"A_sysinfo_STATIC_LTLIBS) mca/timer/libmca_timer.la $(MCA_timer_STATIC_LTLIBS)"
S["MCA_opal_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]=" $(MCA_backtrace_STATIC_SUBDIRS) $(MCA_carto_STATIC_SUBDIRS) $(MCA_crs_STATIC_SUBDIRS) $(MCA_hwloc_STATIC_SUBDIRS) $(MCA_installdirs_STATIC_SUBDIRS)"\
" $(MCA_maffinity_STATIC_SUBDIRS) $(MCA_memchecker_STATIC_SUBDIRS) $(MCA_memcpy_STATIC_SUBDIRS) $(MCA_memory_STATIC_SUBDIRS) $(MCA_paffinity_STATIC_S"\
"UBDIRS) $(MCA_pstat_STATIC_SUBDIRS) $(MCA_shmem_STATIC_SUBDIRS) $(MCA_sysinfo_STATIC_SUBDIRS) $(MCA_timer_STATIC_SUBDIRS)"
S["MCA_opal_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]=" $(MCA_backtrace_DSO_SUBDIRS) $(MCA_carto_DSO_SUBDIRS) $(MCA_crs_DSO_SUBDIRS) $(MCA_hwloc_DSO_SUBDIRS) $(MCA_installdirs_DSO_SUBDIRS) $(MCA_maffinit"\
"y_DSO_SUBDIRS) $(MCA_memchecker_DSO_SUBDIRS) $(MCA_memcpy_DSO_SUBDIRS) $(MCA_memory_DSO_SUBDIRS) $(MCA_paffinity_DSO_SUBDIRS) $(MCA_pstat_DSO_SUBDIR"\
"S) $(MCA_shmem_DSO_SUBDIRS) $(MCA_sysinfo_DSO_SUBDIRS) $(MCA_timer_DSO_SUBDIRS)"
S["MCA_opal_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]=" $(MCA_backtrace_ALL_SUBDIRS) $(MCA_carto_ALL_SUBDIRS) $(MCA_crs_ALL_SUBDIRS) $(MCA_hwloc_ALL_SUBDIRS) $(MCA_installdirs_ALL_SUBDIRS) $(MCA_maffinit"\
"y_ALL_SUBDIRS) $(MCA_memchecker_ALL_SUBDIRS) $(MCA_memcpy_ALL_SUBDIRS) $(MCA_memory_ALL_SUBDIRS) $(MCA_paffinity_ALL_SUBDIRS) $(MCA_pstat_ALL_SUBDIR"\
"S) $(MCA_shmem_ALL_SUBDIRS) $(MCA_sysinfo_ALL_SUBDIRS) $(MCA_timer_ALL_SUBDIRS)"
S["MCA_opal_FRAMEWORKS_SUBDIRS"]=" mca/backtrace mca/carto mca/crs mca/hwloc mca/installdirs mca/maffinity mca/memchecker mca/memcpy mca/memory mca/paffinity mca/pstat mca/shmem mca/"\
"sysinfo mca/timer"
S["MCA_opal_FRAMEWORKS"]=" backtrace carto crs hwloc installdirs maffinity memchecker memcpy memory paffinity pstat shmem sysinfo timer"
S["MCA_timer_DSO_SUBDIRS"]=""
S["MCA_timer_STATIC_SUBDIRS"]=" mca/timer/darwin"
S["MCA_timer_ALL_SUBDIRS"]=" mca/timer/altix mca/timer/catamount mca/timer/aix mca/timer/darwin mca/timer/solaris mca/timer/windows mca/timer/linux"
S["MCA_timer_STATIC_LTLIBS"]="mca/timer/darwin/libmca_timer_darwin.la "
S["MCA_timer_DSO_COMPONENTS"]=""
S["MCA_timer_STATIC_COMPONENTS"]=" darwin"
S["MCA_timer_ALL_COMPONENTS"]=" altix catamount aix darwin solaris windows linux"
S["OMPI_BUILD_timer_linux_DSO_FALSE"]=""
S["OMPI_BUILD_timer_linux_DSO_TRUE"]="#"
S["OMPI_BUILD_timer_windows_DSO_FALSE"]=""
S["OMPI_BUILD_timer_windows_DSO_TRUE"]="#"
S["OMPI_BUILD_timer_solaris_DSO_FALSE"]=""
S["OMPI_BUILD_timer_solaris_DSO_TRUE"]="#"
S["OMPI_BUILD_timer_darwin_DSO_FALSE"]=""
S["OMPI_BUILD_timer_darwin_DSO_TRUE"]="#"
S["OMPI_BUILD_timer_aix_DSO_FALSE"]=""
S["OMPI_BUILD_timer_aix_DSO_TRUE"]="#"
S["timer_aix_LIBS"]=""
S["OMPI_BUILD_timer_catamount_DSO_FALSE"]=""
S["OMPI_BUILD_timer_catamount_DSO_TRUE"]="#"
S["OMPI_BUILD_timer_altix_DSO_FALSE"]=""
S["OMPI_BUILD_timer_altix_DSO_TRUE"]="#"
S["MCA_sysinfo_DSO_SUBDIRS"]=" mca/sysinfo/darwin"
S["MCA_sysinfo_STATIC_SUBDIRS"]=""
S["MCA_sysinfo_ALL_SUBDIRS"]=" mca/sysinfo/linux mca/sysinfo/solaris mca/sysinfo/darwin"
S["MCA_sysinfo_STATIC_LTLIBS"]=""
S["MCA_sysinfo_DSO_COMPONENTS"]=" darwin"
S["MCA_sysinfo_STATIC_COMPONENTS"]=""
S["MCA_sysinfo_ALL_COMPONENTS"]=" linux solaris darwin"
S["OMPI_BUILD_sysinfo_darwin_DSO_FALSE"]="#"
S["OMPI_BUILD_sysinfo_darwin_DSO_TRUE"]=""
S["OMPI_BUILD_sysinfo_solaris_DSO_FALSE"]="#"
S["OMPI_BUILD_sysinfo_solaris_DSO_TRUE"]=""
S["sysinfo_solaris_LIBS"]=""
S["sysinfo_solaris_LDFLAGS"]=""
S["sysinfo_solaris_CPPFLAGS"]=""
S["sysinfo_solaris_CFLAGS"]=""
S["OMPI_BUILD_sysinfo_linux_DSO_FALSE"]="#"
S["OMPI_BUILD_sysinfo_linux_DSO_TRUE"]=""
S["MCA_shmem_DSO_SUBDIRS"]=" mca/shmem/mmap mca/shmem/posix mca/shmem/sysv"
S["MCA_shmem_STATIC_SUBDIRS"]=""
S["MCA_shmem_ALL_SUBDIRS"]=" mca/shmem/mmap mca/shmem/posix mca/shmem/sysv mca/shmem/windows"
S["MCA_shmem_STATIC_LTLIBS"]=""
S["MCA_shmem_DSO_COMPONENTS"]=" mmap posix sysv"
S["MCA_shmem_STATIC_COMPONENTS"]=""
S["MCA_shmem_ALL_COMPONENTS"]=" mmap posix sysv windows"
S["OMPI_BUILD_shmem_windows_DSO_FALSE"]="#"
S["OMPI_BUILD_shmem_windows_DSO_TRUE"]=""
S["OMPI_BUILD_shmem_sysv_DSO_FALSE"]="#"
S["OMPI_BUILD_shmem_sysv_DSO_TRUE"]=""
S["OMPI_BUILD_shmem_posix_DSO_FALSE"]="#"
S["OMPI_BUILD_shmem_posix_DSO_TRUE"]=""
S["OMPI_BUILD_shmem_mmap_DSO_FALSE"]="#"
S["OMPI_BUILD_shmem_mmap_DSO_TRUE"]=""
S["MCA_pstat_DSO_SUBDIRS"]=" mca/pstat/darwin"
S["MCA_pstat_STATIC_SUBDIRS"]=""
S["MCA_pstat_ALL_SUBDIRS"]=" mca/pstat/linux mca/pstat/darwin"
S["MCA_pstat_STATIC_LTLIBS"]=""
S["MCA_pstat_DSO_COMPONENTS"]=" darwin"
S["MCA_pstat_STATIC_COMPONENTS"]=""
S["MCA_pstat_ALL_COMPONENTS"]=" linux darwin"
S["OMPI_BUILD_pstat_darwin_DSO_FALSE"]="#"
S["OMPI_BUILD_pstat_darwin_DSO_TRUE"]=""
S["OMPI_BUILD_pstat_linux_DSO_FALSE"]="#"
S["OMPI_BUILD_pstat_linux_DSO_TRUE"]=""
S["MCA_paffinity_DSO_SUBDIRS"]=" mca/paffinity/hwloc"
S["MCA_paffinity_STATIC_SUBDIRS"]=""
S["MCA_paffinity_ALL_SUBDIRS"]=" mca/paffinity/hwloc mca/paffinity/test"
S["MCA_paffinity_STATIC_LTLIBS"]=""
S["MCA_paffinity_DSO_COMPONENTS"]=" hwloc"
S["MCA_paffinity_STATIC_COMPONENTS"]=""
S["MCA_paffinity_ALL_COMPONENTS"]=" hwloc test"
S["OMPI_BUILD_paffinity_test_DSO_FALSE"]="#"
S["OMPI_BUILD_paffinity_test_DSO_TRUE"]=""
S["OMPI_BUILD_paffinity_hwloc_DSO_FALSE"]="#"
S["OMPI_BUILD_paffinity_hwloc_DSO_TRUE"]=""
S["MCA_memory_DSO_SUBDIRS"]=""
S["MCA_memory_STATIC_SUBDIRS"]=""
S["MCA_memory_ALL_SUBDIRS"]=" mca/memory/linux mca/memory/malloc_solaris"
S["MCA_memory_STATIC_LTLIBS"]=""
S["MCA_memory_DSO_COMPONENTS"]=""
S["MCA_memory_STATIC_COMPONENTS"]=""
S["MCA_memory_ALL_COMPONENTS"]=" linux malloc_solaris"
S["OMPI_BUILD_memory_malloc_solaris_DSO_FALSE"]=""
S["OMPI_BUILD_memory_malloc_solaris_DSO_TRUE"]="#"
S["memory_malloc_solaris_LIBS"]=""
S["OMPI_BUILD_memory_linux_DSO_FALSE"]=""
S["OMPI_BUILD_memory_linux_DSO_TRUE"]="#"
S["memory_linux_LIBS"]=""
S["MEMORY_LINUX_UMMUNOTIFY_FALSE"]=""
S["MEMORY_LINUX_UMMUNOTIFY_TRUE"]="#"
S["MEMORY_LINUX_PTMALLOC2_FALSE"]=""
S["MEMORY_LINUX_PTMALLOC2_TRUE"]="#"
S["MCA_memcpy_DSO_SUBDIRS"]=""
S["MCA_memcpy_STATIC_SUBDIRS"]=""
S["MCA_memcpy_ALL_SUBDIRS"]=""
S["MCA_memcpy_STATIC_LTLIBS"]=""
S["MCA_memcpy_DSO_COMPONENTS"]=""
S["MCA_memcpy_STATIC_COMPONENTS"]=""
S["MCA_memcpy_ALL_COMPONENTS"]=""
S["MCA_memchecker_DSO_SUBDIRS"]=""
S["MCA_memchecker_STATIC_SUBDIRS"]=""
S["MCA_memchecker_ALL_SUBDIRS"]=" mca/memchecker/valgrind"
S["MCA_memchecker_STATIC_LTLIBS"]=""
S["MCA_memchecker_DSO_COMPONENTS"]=""
S["MCA_memchecker_STATIC_COMPONENTS"]=""
S["MCA_memchecker_ALL_COMPONENTS"]=" valgrind"
S["OMPI_BUILD_memchecker_valgrind_DSO_FALSE"]=""
S["OMPI_BUILD_memchecker_valgrind_DSO_TRUE"]="#"
S["opal_memchecker_valgrind_CPPFLAGS"]=""
S["OMPI_WANT_MEMCHECKER_FALSE"]=""
S["OMPI_WANT_MEMCHECKER_TRUE"]="#"
S["MCA_maffinity_DSO_SUBDIRS"]=" mca/maffinity/first_use mca/maffinity/hwloc"
S["MCA_maffinity_STATIC_SUBDIRS"]=""
S["MCA_maffinity_ALL_SUBDIRS"]=" mca/maffinity/first_use mca/maffinity/hwloc"
S["MCA_maffinity_STATIC_LTLIBS"]=""
S["MCA_maffinity_DSO_COMPONENTS"]=" first_use hwloc"
S["MCA_maffinity_STATIC_COMPONENTS"]=""
S["MCA_maffinity_ALL_COMPONENTS"]=" first_use hwloc"
S["OMPI_BUILD_maffinity_hwloc_DSO_FALSE"]="#"
S["OMPI_BUILD_maffinity_hwloc_DSO_TRUE"]=""
S["OMPI_BUILD_maffinity_first_use_DSO_FALSE"]="#"
S["OMPI_BUILD_maffinity_first_use_DSO_TRUE"]=""
S["MCA_installdirs_DSO_SUBDIRS"]=""
S["MCA_installdirs_STATIC_SUBDIRS"]=" mca/installdirs/env mca/installdirs/config"
S["MCA_installdirs_ALL_SUBDIRS"]=" mca/installdirs/env mca/installdirs/config mca/installdirs/windows"
S["MCA_installdirs_STATIC_LTLIBS"]="mca/installdirs/config/libmca_installdirs_config.la mca/installdirs/env/libmca_installdirs_env.la "
S["MCA_installdirs_DSO_COMPONENTS"]=""
S["MCA_installdirs_STATIC_COMPONENTS"]=" env config"
S["MCA_installdirs_ALL_COMPONENTS"]=" env config windows"
S["OMPI_BUILD_installdirs_windows_DSO_FALSE"]=""
S["OMPI_BUILD_installdirs_windows_DSO_TRUE"]="#"
S["OMPI_BUILD_installdirs_config_DSO_FALSE"]=""
S["OMPI_BUILD_installdirs_config_DSO_TRUE"]="#"
S["OMPI_BUILD_installdirs_env_DSO_FALSE"]=""
S["OMPI_BUILD_installdirs_env_DSO_TRUE"]="#"
S["OPAL_HAVE_HWLOC_FALSE"]="#"
S["OPAL_HAVE_HWLOC_TRUE"]=""
S["MCA_hwloc_DSO_SUBDIRS"]=""
S["MCA_hwloc_STATIC_SUBDIRS"]=" mca/hwloc/hwloc132"
S["MCA_hwloc_ALL_SUBDIRS"]=" mca/hwloc/hwloc132 mca/hwloc/external"
S["MCA_hwloc_STATIC_LTLIBS"]="mca/hwloc/hwloc132/libmca_hwloc_hwloc132.la "
S["MCA_hwloc_DSO_COMPONENTS"]=""
S["MCA_hwloc_STATIC_COMPONENTS"]=" hwloc132"
S["MCA_hwloc_ALL_COMPONENTS"]=" hwloc132 external"
S["OMPI_BUILD_hwloc_external_DSO_FALSE"]=""
S["OMPI_BUILD_hwloc_external_DSO_TRUE"]="#"
S["opal_hwloc_external_LIBS"]=""
S["opal_hwloc_external_LDFLAGS"]=""
S["OMPI_BUILD_hwloc_hwloc132_DSO_FALSE"]=""
S["OMPI_BUILD_hwloc_hwloc132_DSO_TRUE"]="#"
S["HWLOC_BUILD_TESTS_FALSE"]=""
S["HWLOC_BUILD_TESTS_TRUE"]="#"
S["HWLOC_BUILD_UTILS_FALSE"]=""
S["HWLOC_BUILD_UTILS_TRUE"]="#"
S["HWLOC_HAVE_CPUID_FALSE"]="#"
S["HWLOC_HAVE_CPUID_TRUE"]=""
S["HWLOC_DOXYGEN_BROKEN_SHORT_NAMES_FALSE"]=""
S["HWLOC_DOXYGEN_BROKEN_SHORT_NAMES_TRUE"]="#"
S["HWLOC_HAVE_X86_64_FALSE"]="#"
S["HWLOC_HAVE_X86_64_TRUE"]=""
S["HWLOC_HAVE_X86_32_FALSE"]=""
S["HWLOC_HAVE_X86_32_TRUE"]="#"
S["HWLOC_HAVE_MINGW32_FALSE"]=""
S["HWLOC_HAVE_MINGW32_TRUE"]="#"
S["HWLOC_HAVE_WINDOWS_FALSE"]=""
S["HWLOC_HAVE_WINDOWS_TRUE"]="#"
S["HWLOC_HAVE_HPUX_FALSE"]=""
S["HWLOC_HAVE_HPUX_TRUE"]="#"
S["HWLOC_HAVE_OSF_FALSE"]=""
S["HWLOC_HAVE_OSF_TRUE"]="#"
S["HWLOC_HAVE_AIX_FALSE"]=""
S["HWLOC_HAVE_AIX_TRUE"]="#"
S["HWLOC_HAVE_SOLARIS_FALSE"]=""
S["HWLOC_HAVE_SOLARIS_TRUE"]="#"
S["HWLOC_HAVE_FREEBSD_FALSE"]=""
S["HWLOC_HAVE_FREEBSD_TRUE"]="#"
S["HWLOC_HAVE_DARWIN_FALSE"]="#"
S["HWLOC_HAVE_DARWIN_TRUE"]=""
S["HWLOC_HAVE_IRIX_FALSE"]=""
S["HWLOC_HAVE_IRIX_TRUE"]="#"
S["HWLOC_HAVE_LINUX_FALSE"]=""
S["HWLOC_HAVE_LINUX_TRUE"]="#"
S["HWLOC_INSTALL_DOXYGEN_FALSE"]=""
S["HWLOC_INSTALL_DOXYGEN_TRUE"]="#"
S["HWLOC_BUILD_README_FALSE"]=""
S["HWLOC_BUILD_README_TRUE"]="#"
S["HWLOC_BUILD_DOXYGEN_FALSE"]=""
S["HWLOC_BUILD_DOXYGEN_TRUE"]="#"
S["HWLOC_HAVE_BUNZIPP_FALSE"]="#"
S["HWLOC_HAVE_BUNZIPP_TRUE"]=""
S["HWLOC_HAVE_MBIND_FALSE"]="#"
S["HWLOC_HAVE_MBIND_TRUE"]=""
S["HWLOC_HAVE_SET_MEMPOLICY_FALSE"]="#"
S["HWLOC_HAVE_SET_MEMPOLICY_TRUE"]=""
S["HWLOC_HAVE_LIBPCI_FALSE"]=""
S["HWLOC_HAVE_LIBPCI_TRUE"]="#"
S["HWLOC_HAVE_CAIRO_FALSE"]=""
S["HWLOC_HAVE_CAIRO_TRUE"]="#"
S["HWLOC_HAVE_CUDART_FALSE"]=""
S["HWLOC_HAVE_CUDART_TRUE"]="#"
S["HWLOC_HAVE_MYRIEXPRESS_FALSE"]=""
S["HWLOC_HAVE_MYRIEXPRESS_TRUE"]="#"
S["HWLOC_HAVE_CUDA_FALSE"]=""
S["HWLOC_HAVE_CUDA_TRUE"]="#"
S["HWLOC_HAVE_LIBIBVERBS_FALSE"]=""
S["HWLOC_HAVE_LIBIBVERBS_TRUE"]="#"
S["HWLOC_HAVE_SCHED_SETAFFINITY_FALSE"]=""
S["HWLOC_HAVE_SCHED_SETAFFINITY_TRUE"]="#"
S["HWLOC_HAVE_LINUX_LIBNUMA_FALSE"]=""
S["HWLOC_HAVE_LINUX_LIBNUMA_TRUE"]="#"
S["HWLOC_HAVE_OPENAT_FALSE"]=""
S["HWLOC_HAVE_OPENAT_TRUE"]="#"
S["HWLOC_HAVE_MS_LIB_FALSE"]=""
S["HWLOC_HAVE_MS_LIB_TRUE"]="#"
S["HWLOC_HAVE_GCC_FALSE"]="#"
S["HWLOC_HAVE_GCC_TRUE"]=""
S["HWLOC_BUILD_STANDALONE_FALSE"]=""
S["HWLOC_BUILD_STANDALONE_TRUE"]="#"
S["opal_hwloc_hwloc132_LIBS"]="$(top_ompi_builddir)/opal/mca/hwloc/hwloc132/hwloc/src/libhwloc_embedded.la $(HWLOC_EMBEDDED_LIBS)"
S["opal_hwloc_hwloc132_LDFLAGS"]="$(HWLOC_EMBEDDED_LDFLAGS)"
S["opal_hwloc_hwloc132_CPPFLAGS"]=""
S["opal_hwloc_hwloc132_CFLAGS"]=""
S["HWLOC_EMBEDDED_LIBS"]="-lm    "
S["HWLOC_EMBEDDED_LDADD"]="$(HWLOC_top_builddir)/src/libhwloc_embedded.la"
S["HWLOC_EMBEDDED_CPPFLAGS"]="-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include"
S["HWLOC_EMBEDDED_CFLAGS"]=" -fvisibility=hidden  "
S["HWLOC_LIBS"]=""
S["HWLOC_LDFLAGS"]=""
S["HWLOC_CPPFLAGS"]="-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include"
S["HWLOC_CFLAGS"]=" -fvisibility=hidden  "
S["HWLOC_REQUIRES"]=""
S["HWLOC_HAVE_LIBXML2"]="0"
S["HWLOC_LIBXML2_LIBS"]=""
S["HWLOC_LIBXML2_CFLAGS"]=""
S["HWLOC_HAVE_LIBPCI"]="0"
S["HWLOC_PCI_LIBS"]=""
S["HWLOC_PCI_CFLAGS"]=""
S["HWLOC_LINUX_LIBNUMA_LIBS"]=""
S["BASH"]="/bin/sh"
S["HWLOC_MS_LIB"]=""
S["HWLOC_KERRIGHED_LIBS"]=""
S["HWLOC_KERRIGHED_CFLAGS"]=""
S["PKG_CONFIG"]=""
S["HWLOC_MS_LIB_ARCH"]="X64"
S["HWLOC_top_srcdir"]="/Users/luongnv89/programming/openmpi/openmpi-1.6.5/opal/mca/hwloc/hwloc132/hwloc"
S["HWLOC_top_builddir"]="/Users/luongnv89/programming/openmpi/openmpi-1.6.5/opal/mca/hwloc/hwloc132/hwloc"
S["MCA_crs_DSO_SUBDIRS"]=" mca/crs/none"
S["MCA_crs_STATIC_SUBDIRS"]=""
S["MCA_crs_ALL_SUBDIRS"]=" mca/crs/none mca/crs/blcr mca/crs/self"
S["MCA_crs_STATIC_LTLIBS"]=""
S["MCA_crs_DSO_COMPONENTS"]=" none"
S["MCA_crs_STATIC_COMPONENTS"]=""
S["MCA_crs_ALL_COMPONENTS"]=" none blcr self"
S["OMPI_BUILD_crs_self_DSO_FALSE"]="#"
S["OMPI_BUILD_crs_self_DSO_TRUE"]=""
S["OMPI_BUILD_crs_blcr_DSO_FALSE"]="#"
S["OMPI_BUILD_crs_blcr_DSO_TRUE"]=""
S["crs_blcr_LIBS"]="  "
S["crs_blcr_LDFLAGS"]="  "
S["crs_blcr_CPPFLAGS"]=" -D_REENTRANT -I/Users/luongnv89/programming/openmpi/openmpi-1.6.5/opal/mca/hwloc/hwloc132/hwloc/include "
S["crs_blcr_CFLAGS"]="-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing  "
S["crs_blcr_WRAPPER_EXTRA_CPPFLAGS"]=""
S["crs_blcr_WRAPPER_EXTRA_LIBS"]=""
S["crs_blcr_WRAPPER_EXTRA_LDFLAGS"]=""
S["OMPI_BUILD_crs_none_DSO_FALSE"]="#"
S["OMPI_BUILD_crs_none_DSO_TRUE"]=""
S["MCA_carto_DSO_SUBDIRS"]=" mca/carto/auto_detect mca/carto/file"
S["MCA_carto_STATIC_SUBDIRS"]=""
S["MCA_carto_ALL_SUBDIRS"]=" mca/carto/auto_detect mca/carto/file"
S["MCA_carto_STATIC_LTLIBS"]=""
S["MCA_carto_DSO_COMPONENTS"]=" auto_detect file"
S["MCA_carto_STATIC_COMPONENTS"]=""
S["MCA_carto_ALL_COMPONENTS"]=" auto_detect file"
S["OMPI_BUILD_carto_file_DSO_FALSE"]="#"
S["OMPI_BUILD_carto_file_DSO_TRUE"]=""
S["OMPI_BUILD_carto_auto_detect_DSO_FALSE"]="#"
S["OMPI_BUILD_carto_auto_detect_DSO_TRUE"]=""
S["MCA_backtrace_DSO_SUBDIRS"]=""
S["MCA_backtrace_STATIC_SUBDIRS"]=" mca/backtrace/execinfo"
S["MCA_backtrace_ALL_SUBDIRS"]=" mca/backtrace/execinfo mca/backtrace/printstack mca/backtrace/darwin mca/backtrace/none"
S["MCA_backtrace_STATIC_LTLIBS"]="mca/backtrace/execinfo/libmca_backtrace_execinfo.la "
S["MCA_backtrace_DSO_COMPONENTS"]=""
S["MCA_backtrace_STATIC_COMPONENTS"]=" execinfo"
S["MCA_backtrace_ALL_COMPONENTS"]=" execinfo printstack darwin none"
S["OMPI_BUILD_backtrace_none_DSO_FALSE"]=""
S["OMPI_BUILD_backtrace_none_DSO_TRUE"]="#"
S["OMPI_BUILD_backtrace_darwin_DSO_FALSE"]=""
S["OMPI_BUILD_backtrace_darwin_DSO_TRUE"]="#"
S["backtrace_darwin_CFLAGS"]="-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing"
S["OMPI_BUILD_backtrace_printstack_DSO_FALSE"]=""
S["OMPI_BUILD_backtrace_printstack_DSO_TRUE"]="#"
S["OMPI_BUILD_backtrace_execinfo_DSO_FALSE"]=""
S["OMPI_BUILD_backtrace_execinfo_DSO_TRUE"]="#"
S["CASE_SENSITIVE_FS_FALSE"]=""
S["CASE_SENSITIVE_FS_TRUE"]="#"
S["LEXLIB"]="-ll"
S["LEX_OUTPUT_ROOT"]="lex.yy"
S["LEX"]="flex"
S["LN_S"]="ln -s"
S["WANT_FT_THREAD_FALSE"]=""
S["WANT_FT_THREAD_TRUE"]="#"
S["OPAL_HAVE_SOLARIS_THREADS_FALSE"]=""
S["OPAL_HAVE_SOLARIS_THREADS_TRUE"]="#"
S["OPAL_HAVE_POSIX_THREADS_FALSE"]="#"
S["OPAL_HAVE_POSIX_THREADS_TRUE"]=""
S["OMPI_MPI_OFFSET_KIND"]="8"
S["OMPI_MPI_ADDRESS_KIND"]="8"
S["OMPI_MPI_INTEGER_KIND"]="4"
S["OMPI_F90_CKINDS"]=" 8  16  32 "
S["OMPI_F90_RKINDS"]=" 4  8  16 "
S["OMPI_F90_IKINDS"]=" 1  2  4  8 "
S["OMPI_SIZEOF_F90_DOUBLE_COMPLEX"]="16"
S["OMPI_SIZEOF_F90_COMPLEX32"]="32"
S["OMPI_SIZEOF_F90_COMPLEX16"]="16"
S["OMPI_SIZEOF_F90_COMPLEX8"]="8"
S["OMPI_SIZEOF_F90_COMPLEX"]="8"
S["OMPI_SIZEOF_F90_DOUBLE_PRECISION"]="8"
S["OMPI_SIZEOF_F90_REAL16"]="16"
S["OMPI_SIZEOF_F90_REAL8"]="8"
S["OMPI_SIZEOF_F90_REAL4"]="4"
S["OMPI_SIZEOF_F90_REAL2"]="4"
S["OMPI_SIZEOF_F90_REAL"]="4"
S["OMPI_SIZEOF_F90_INTEGER16"]="16"
S["OMPI_SIZEOF_F90_INTEGER8"]="8"
S["OMPI_SIZEOF_F90_INTEGER4"]="4"
S["OMPI_SIZEOF_F90_INTEGER2"]="2"
S["OMPI_SIZEOF_F90_INTEGER1"]="1"
S["OMPI_SIZEOF_F90_INTEGER"]="4"
S["OMPI_SIZEOF_F90_LOGICAL8"]="8"
S["OMPI_SIZEOF_F90_LOGICAL4"]="4"
S["OMPI_SIZEOF_F90_LOGICAL2"]="2"
S["OMPI_SIZEOF_F90_LOGICAL1"]="1"
S["OMPI_SIZEOF_F90_LOGICAL"]="4"
S["OMPI_SIZEOF_F90_CHARACTER"]="1"
S["OMPI_FC_MODULE_FLAG"]="-I"
S["OMPI_F90_ABSOLUTE"]="/usr/local/bin/gfortran"
S["OMPI_WANT_F90_BINDINGS_FALSE"]="#"
S["OMPI_WANT_F90_BINDINGS_TRUE"]=""
S["FCFLAGS_f90"]=""
S["FCFLAGS_f"]=""
S["OMPI_F90_EXTRA_SHARED_LIBRARY_FLAGS"]="-static"
S["ac_ct_FC"]="gfortran"
S["FCFLAGS"]=""
S["FC"]="gfortran"
S["WANT_PMPI_F77_BINDINGS_LAYER_FALSE"]="#"
S["WANT_PMPI_F77_BINDINGS_LAYER_TRUE"]=""
S["WANT_MPI_F77_BINDINGS_LAYER_FALSE"]="#"
S["WANT_MPI_F77_BINDINGS_LAYER_TRUE"]=""
S["OMPI_FORTRAN_STATUS_SIZE"]="6"
S["OMPI_F77_ABSOLUTE"]="/usr/local/bin/gfortran"
S["OMPI_WANT_F77_BINDINGS_FALSE"]="#"
S["OMPI_WANT_F77_BINDINGS_TRUE"]=""
S["ac_ct_F77"]="gfortran"
S["FFLAGS"]=""
S["F77"]="gfortran"
S["OMPI_ASM_FILE"]="atomic-local.s"
S["OPAL_HAVE_ASM_FILE_FALSE"]="#"
S["OPAL_HAVE_ASM_FILE_TRUE"]=""
S["PERL"]="/usr/bin/perl"
S["FGREP"]="/usr/bin/grep -F"
S["OPAL_ASSEMBLY_ARCH"]="AMD64"
S["OPAL_ASSEMBLY_FORMAT"]="default-.text-.globl-:-_-L--0-1-1-1-0"
S["OPAL_ASM_SUPPORT_64BIT"]="1"
S["OPAL_ASM_TYPE"]=""
S["OPAL_ASM_LSYM"]="L"
S["NM"]="/usr/bin/nm"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["OPAL_ASM_GSYM"]="_"
S["OMPI_AS_LABEL_SUFFIX"]=""
S["OBJDUMP"]="false"
S["OMPI_AS_GLOBAL"]=""
S["OPAL_ASM_TEXT"]=".text"
S["am__fastdepCCAS_FALSE"]="#"
S["am__fastdepCCAS_TRUE"]=""
S["CCASDEPMODE"]="depmode=gcc3"
S["CCASFLAGS"]="-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing"
S["CCAS"]="gcc"
S["WANT_MPI_CXX_BINDINGS_FALSE"]="#"
S["WANT_MPI_CXX_BINDINGS_TRUE"]=""
S["OMPI_CXX_ABSOLUTE"]="/usr/bin/g++"
S["OPAL_CXX_ABSOLUTE"]="/usr/bin/g++"
S["CXXCPP"]="g++ -E"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="-O3 -DNDEBUG -finline-functions "
S["CXX"]="g++"
S["COMPILE_PROFILING_SEPARATELY_FALSE"]="#"
S["COMPILE_PROFILING_SEPARATELY_TRUE"]=""
S["WANT_PMPI_BINDINGS_LAYER_FALSE"]="#"
S["WANT_PMPI_BINDINGS_LAYER_TRUE"]=""
S["WANT_MPI_BINDINGS_LAYER_FALSE"]="#"
S["WANT_MPI_BINDINGS_LAYER_TRUE"]=""
S["OMPI_NEED_WINDOWS_REPLACEMENTS_FALSE"]=""
S["OMPI_NEED_WINDOWS_REPLACEMENTS_TRUE"]="#"
S["OPAL_CC_ABSOLUTE"]="/usr/bin/gcc"
S["OMPI_FORTRAN_MAX_ARRAY_RANK"]="4"
S["MPIF_H_PMPI_W_FUNCS"]=", PMPI_WTICK, PMPI_WTIME"
S["OMPI_F90_BUILD_SIZE"]="small"
S["OMPI_WANT_BUILD_F90_LARGE_FALSE"]=""
S["OMPI_WANT_BUILD_F90_LARGE_TRUE"]="#"
S["OMPI_WANT_BUILD_F90_MEDIUM_FALSE"]=""
S["OMPI_WANT_BUILD_F90_MEDIUM_TRUE"]="#"
S["OMPI_WANT_BUILD_F90_SMALL_FALSE"]="#"
S["OMPI_WANT_BUILD_F90_SMALL_TRUE"]=""
S["OMPI_WANT_BUILD_F90_TRIVIAL_FALSE"]=""
S["OMPI_WANT_BUILD_F90_TRIVIAL_TRUE"]="#"
S["WANT_PERUSE_FALSE"]=""
S["WANT_PERUSE_TRUE"]="#"
S["ORTE_DISABLE_FULL_SUPPORT_FALSE"]=""
S["ORTE_DISABLE_FULL_SUPPORT_TRUE"]="#"
S["OPAL_MAX_DATAREP_STRING"]="128"
S["OPAL_MAX_PORT_NAME"]="1024"
S["OPAL_MAX_INFO_VAL"]="256"
S["OPAL_MAX_INFO_KEY"]="36"
S["OPAL_MAX_OBJECT_NAME"]="64"
S["OPAL_MAX_ERROR_STRING"]="256"
S["OPAL_MAX_PROCESSOR_NAME"]="256"
S["OPAL_WANT_SCRIPT_WRAPPER_COMPILERS_FALSE"]=""
S["OPAL_WANT_SCRIPT_WRAPPER_COMPILERS_TRUE"]="#"
S["OMPI_INSTALL_BINARIES_FALSE"]="#"
S["OMPI_INSTALL_BINARIES_TRUE"]=""
S["WANT_FT_FALSE"]=""
S["WANT_FT_TRUE"]="#"
S["WANT_INSTALL_HEADERS_FALSE"]=""
S["WANT_INSTALL_HEADERS_TRUE"]="#"
S["top_ompi_builddir"]="/Users/luongnv89/programming/openmpi/openmpi-1.6.5"
S["top_ompi_srcdir"]="/Users/luongnv89/programming/openmpi/openmpi-1.6.5"
S["ac_prefix_program"]=""
S["CLEANFILES"]="*~ .\\#*"
S["OMPI_TOP_SRCDIR"]="/Users/luongnv89/programming/openmpi/openmpi-1.6.5"
S["OMPI_TOP_BUILDDIR"]="/Users/luongnv89/programming/openmpi/openmpi-1.6.5"
S["libopen_pal_so_version"]="4:5:0"
S["libopen_rte_so_version"]="4:3:0"
S["libmca_common_portals_so_version"]="1:0:0"
S["libmca_common_mx_so_version"]="1:1:0"
S["libmca_common_sm_so_version"]="3:1:0"
S["libmpi_f90_so_version"]="4:0:3"
S["libmpi_f77_so_version"]="1:7:0"
S["libmpi_cxx_so_version"]="1:2:0"
S["libmpi_so_version"]="1:8:0"
S["OPAL_RELEASE_DATE"]="Jun 26, 2013"
S["OPAL_VERSION"]="1.6.5"
S["OPAL_SVN_R"]="r28673"
S["OPAL_WANT_SVN"]="0"
S["OPAL_GREEK_VERSION"]=""
S["OPAL_RELEASE_VERSION"]="5"
S["OPAL_MINOR_VERSION"]="6"
S["OPAL_MAJOR_VERSION"]="1"
S["ORTE_RELEASE_DATE"]="Jun 26, 2013"
S["ORTE_VERSION"]="1.6.5"
S["ORTE_SVN_R"]="r28673"
S["ORTE_WANT_SVN"]="0"
S["ORTE_GREEK_VERSION"]=""
S["ORTE_RELEASE_VERSION"]="5"
S["ORTE_MINOR_VERSION"]="6"
S["ORTE_MAJOR_VERSION"]="1"
S["OMPI_RELEASE_DATE"]="Jun 26, 2013"
S["OMPI_VERSION"]="1.6.5"
S["OMPI_SVN_R"]="r28673"
S["OMPI_WANT_SVN"]="0"
S["OMPI_GREEK_VERSION"]=""
S["OMPI_RELEASE_VERSION"]="5"
S["OMPI_MINOR_VERSION"]="6"
S["OMPI_MAJOR_VERSION"]="1"
S["PROJECT_ORTE_FALSE"]="#"
S["PROJECT_ORTE_TRUE"]=""
S["PROJECT_OMPI_FALSE"]="#"
S["PROJECT_OMPI_TRUE"]=""
S["CONFIGURE_DEPENDENCIES"]="$(top_srcdir)/VERSION"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["am__untar"]="tar -xf -"
S["am__tar"]="tar --format=ustar -chf - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="awk"
S["mkdir_p"]="$(top_builddir)/config/install-sh -c -d"
S["MKDIR_P"]="config/install-sh -c -d"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /Users/luongnv89/programming/openmpi/openmpi-1.6.5/config/install-sh"
S["MAKEINFO"]="${SHELL} /Users/luongnv89/programming/openmpi/openmpi-1.6.5/config/missing --run makeinfo"
S["AUTOHEADER"]="${SHELL} /Users/luongnv89/programming/openmpi/openmpi-1.6.5/config/missing --run autoheader"
S["AUTOMAKE"]="${SHELL} /Users/luongnv89/programming/openmpi/openmpi-1.6.5/config/missing --run automake-1.11"
S["AUTOCONF"]="${SHELL} /Users/luongnv89/programming/openmpi/openmpi-1.6.5/config/missing --run autoconf"
S["ACLOCAL"]="${SHELL} /Users/luongnv89/programming/openmpi/openmpi-1.6.5/config/missing --run aclocal-1.11"
S["VERSION"]="1.6.5"
S["PACKAGE"]="openmpi"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CPP"]="gcc -E"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]="-I$(top_srcdir)  -D_REENTRANT -I/Users/luongnv89/programming/openmpi/openmpi-1.6.5/opal/mca/hwloc/hwloc132/hwloc/include   -I/usr/include/infiniband"\
" -I/usr/include/infiniband "
S["LDFLAGS"]="-export-dynamic  "
S["CFLAGS"]="-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing "
S["CC"]="gcc"
S["target_os"]="darwin13.0.0"
S["target_vendor"]="apple"
S["target_cpu"]="x86_64"
S["target"]="x86_64-apple-darwin13.0.0"
S["host_os"]="darwin13.0.0"
S["host_vendor"]="apple"
S["host_cpu"]="x86_64"
S["host"]="x86_64-apple-darwin13.0.0"
S["build_os"]="darwin13.0.0"
S["build_vendor"]="apple"
S["build_cpu"]="x86_64"
S["build"]="x86_64-apple-darwin13.0.0"
S["OMPI_CONFIGURE_DATE"]="Mon Oct 28 23:33:44 CET 2013"
S["OMPI_CONFIGURE_HOST"]="Nguyens-MacBook-Pro.local"
S["OMPI_CONFIGURE_USER"]="luongnv89"
S["OPAL_PARAM_FROM_PLATFORM"]=""
S["OPAL_DEFAULT_MCA_PARAM_CONF"]="openmpi-mca-params.conf"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=" "
S["ECHO_T"]=""
S["ECHO_N"]=""
S["ECHO_C"]="\\c"
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="http://www.open-mpi.org/community/help/"
S["PACKAGE_STRING"]="Open MPI 1.6.5"
S["PACKAGE_VERSION"]="1.6.5"
S["PACKAGE_TARNAME"]="openmpi"
S["PACKAGE_NAME"]="Open MPI"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"Open MPI\""
D["PACKAGE_TARNAME"]=" \"openmpi\""
D["PACKAGE_VERSION"]=" \"1.6.5\""
D["PACKAGE_STRING"]=" \"Open MPI 1.6.5\""
D["PACKAGE_BUGREPORT"]=" \"http://www.open-mpi.org/community/help/\""
D["PACKAGE_URL"]=" \"\""
D["OPAL_ARCH"]=" \"x86_64-apple-darwin13.0.0\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["OMPI_MAJOR_VERSION"]=" 1"
D["OMPI_MINOR_VERSION"]=" 6"
D["OMPI_RELEASE_VERSION"]=" 5"
D["OMPI_GREEK_VERSION"]=" \"\""
D["OMPI_VERSION"]=" \"5\""
D["OMPI_RELEASE_DATE"]=" \"Jun 26, 2013\""
D["ORTE_MAJOR_VERSION"]=" 1"
D["ORTE_MINOR_VERSION"]=" 6"
D["ORTE_RELEASE_VERSION"]=" 5"
D["ORTE_GREEK_VERSION"]=" \"\""
D["ORTE_VERSION"]=" \"5\""
D["ORTE_RELEASE_DATE"]=" \"Jun 26, 2013\""
D["OPAL_MAJOR_VERSION"]=" 1"
D["OPAL_MINOR_VERSION"]=" 6"
D["OPAL_RELEASE_VERSION"]=" 5"
D["OPAL_GREEK_VERSION"]=" \"\""
D["OPAL_VERSION"]=" \"5\""
D["OPAL_RELEASE_DATE"]=" \"Jun 26, 2013\""
D["OPAL_ENABLE_PROGRESS_THREADS"]=" 0"
D["OPAL_ENABLE_MEM_DEBUG"]=" 0"
D["OPAL_ENABLE_MEM_PROFILE"]=" 0"
D["OPAL_ENABLE_DEBUG"]=" 0"
D["OPAL_WANT_PRETTY_PRINT_STACKTRACE"]=" 1"
D["OPAL_ENABLE_PTY_SUPPORT"]=" 1"
D["OPAL_ENABLE_HETEROGENEOUS_SUPPORT"]=" 0"
D["OPAL_ENABLE_TRACE"]=" 0"
D["OPAL_ENABLE_FT"]=" 0"
D["OPAL_ENABLE_FT_CR"]=" 0"
D["OPAL_WANT_HOME_CONFIG_FILES"]=" 1"
D["OPAL_ENABLE_IPV6"]=" 0"
D["OPAL_PACKAGE_STRING"]=" \"Open MPI luongnv89@Nguyens-MacBook-Pro.local Distribution\""
D["OPAL_IDENT_STRING"]=" \"1.6.5\""
D["OPAL_MAX_PROCESSOR_NAME"]=" 256"
D["OPAL_MAX_ERROR_STRING"]=" 256"
D["OPAL_MAX_OBJECT_NAME"]=" 64"
D["OPAL_MAX_INFO_KEY"]=" 36"
D["OPAL_MAX_INFO_VAL"]=" 256"
D["OPAL_MAX_PORT_NAME"]=" 1024"
D["OPAL_MAX_DATAREP_STRING"]=" 128"
D["ORTE_DISABLE_FULL_SUPPORT"]=" 0"
D["ORTE_WANT_ORTERUN_PREFIX_BY_DEFAULT"]=" 0"
D["OMPI_WANT_MPI_INTERFACE_WARNING"]=" 0"
D["OMPI_GROUP_SPARSE"]=" 0"
D["OMPI_WANT_PERUSE"]=" 0"
D["OMPI_WANT_MPI_CXX_SEEK"]=" 1"
D["MPI_PARAM_CHECK"]=" ompi_mpi_param_check"
D["OPAL_CC"]=" \"gcc\""
D["STDC_HEADERS"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["OPAL_C_HAVE_BUILTIN_EXPECT"]=" 1"
D["OPAL_C_HAVE_BUILTIN_PREFETCH"]=" 1"
D["OPAL_CC_USE_PRAGMA_IDENT"]=" 0"
D["OPAL_CC_USE_IDENT"]=" 0"
D["OPAL_CC_USE_PRAGMA_COMMENT"]=" "
D["OPAL_CC_USE_CONST_CHAR_IDENT"]=" 1"
D["HAVE_INT8_T"]=" 1"
D["HAVE_UINT8_T"]=" 1"
D["HAVE_INT16_T"]=" 1"
D["HAVE_UINT16_T"]=" 1"
D["HAVE_INT32_T"]=" 1"
D["HAVE_UINT32_T"]=" 1"
D["HAVE_INT64_T"]=" 1"
D["HAVE_UINT64_T"]=" 1"
D["HAVE_LONG_LONG"]=" 1"
D["HAVE_LONG_DOUBLE"]=" 1"
D["HAVE_FLOAT__COMPLEX"]=" 1"
D["HAVE_DOUBLE__COMPLEX"]=" 1"
D["HAVE_LONG_DOUBLE__COMPLEX"]=" 1"
D["HAVE_INTPTR_T"]=" 1"
D["HAVE_UINTPTR_T"]=" 1"
D["HAVE_MODE_T"]=" 1"
D["HAVE_SSIZE_T"]=" 1"
D["HAVE_PTRDIFF_T"]=" 1"
D["SIZEOF_CHAR"]=" 1"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_FLOAT"]=" 4"
D["SIZEOF_DOUBLE"]=" 8"
D["SIZEOF_LONG_DOUBLE"]=" 16"
D["SIZEOF_FLOAT__COMPLEX"]=" 8"
D["SIZEOF_DOUBLE__COMPLEX"]=" 16"
D["SIZEOF_LONG_DOUBLE__COMPLEX"]=" 32"
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_SSIZE_T"]=" 8"
D["SIZEOF_PTRDIFF_T"]=" 8"
D["SIZEOF_WCHAR_T"]=" 4"
D["OPAL_ALIGNMENT_BOOL"]=" 1"
D["OPAL_ALIGNMENT_INT8"]=" 1"
D["OPAL_ALIGNMENT_INT16"]=" 2"
D["OPAL_ALIGNMENT_INT32"]=" 4"
D["OPAL_ALIGNMENT_INT64"]=" 8"
D["OPAL_ALIGNMENT_CHAR"]=" 1"
D["OPAL_ALIGNMENT_SHORT"]=" 2"
D["OPAL_ALIGNMENT_WCHAR"]=" 4"
D["OPAL_ALIGNMENT_INT"]=" 4"
D["OPAL_ALIGNMENT_LONG"]=" 8"
D["OPAL_ALIGNMENT_LONG_LONG"]=" 8"
D["OPAL_ALIGNMENT_FLOAT"]=" 4"
D["OPAL_ALIGNMENT_DOUBLE"]=" 8"
D["OPAL_ALIGNMENT_LONG_DOUBLE"]=" 16"
D["OPAL_ALIGNMENT_FLOAT_COMPLEX"]=" 4"
D["OPAL_ALIGNMENT_DOUBLE_COMPLEX"]=" 8"
D["OPAL_ALIGNMENT_LONG_DOUBLE_COMPLEX"]=" 16"
D["OPAL_ALIGNMENT_VOID_P"]=" 8"
D["OPAL_NEED_C_BOOL"]=" 1"
D["SIZEOF__BOOL"]=" 1"
D["inline"]=" __inline__"
D["restrict"]=" __restrict"
D["OMPI_ENABLE_MPI_PROFILING"]=" 1"
D["OPAL_HAVE_WEAK_SYMBOLS"]=" 0"
D["OPAL_CXX"]=" \"g++\""
D["SIZEOF_BOOL"]=" 1"
D["OPAL_ALIGNMENT_CXX_BOOL"]=" 1"
D["OMPI_CXX"]=" \"g++\""
D["SIZEOF_BOOL"]=" 1"
D["OPAL_ALIGNMENT_CXX_BOOL"]=" 1"
D["OMPI_HAVE_CXX_EXCEPTION_SUPPORT"]=" 0"
D["OPAL_CXX_USE_PRAGMA_IDENT"]=" 0"
D["OPAL_CXX_USE_IDENT"]=" 0"
D["OPAL_CXX_USE_PRAGMA_COMMENT"]=" "
D["OPAL_CXX_USE_CONST_CHAR_IDENT"]=" 1"
D["OMPI_CXX_HAVE_BUILTIN_EXPECT"]=" 0"
D["OMPI_CXX_HAVE_BUILTIN_PREFETCH"]=" 0"
D["OMPI_CXX_SUPPORTS_2D_CONST_CAST"]=" 1"
D["OMPI_WANT_CXX_BINDINGS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ALIGNED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ALWAYS_INLINE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_COLD"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_CONST"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DEPRECATED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DEPRECATED_ARGUMENT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_FORMAT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_FORMAT_FUNCPTR"]=" 0"
D["OPAL_HAVE_ATTRIBUTE_HOT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_MAY_ALIAS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NONNULL"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NORETURN_FUNCPTR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_PACKED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_PURE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_SENTINEL"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_UNUSED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_VISIBILITY"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_WEAK_ALIAS"]=" 0"
D["OPAL_BUILD_PLATFORM_COMPILER_FAMILYID"]=" 1"
D["OPAL_BUILD_PLATFORM_COMPILER_FAMILYNAME"]=" GNU"
D["OPAL_BUILD_PLATFORM_COMPILER_VERSION"]=" 262657"
D["OPAL_BUILD_PLATFORM_COMPILER_VERSION_STR"]=" 4.2.1"
D["OPAL_WANT_SMP_LOCKS"]=" 1"
D["OPAL_ASM_TEXT"]=" \".text\""
D["OPAL_ASM_GLOBAL"]=" \".globl\""
D["OPAL_ASM_LABEL_SUFFIX"]=" \":\""
D["OPAL_ASM_GSYM"]=" \"_\""
D["OPAL_ASM_LSYM"]=" \"L\""
D["OPAL_ASM_TYPE"]=" \"\""
D["OPAL_ASM_SIZE"]=" \"0\""
D["OPAL_ASM_ALIGN_LOG"]=" "
D["OPAL_ASM_SUPPORT_64BIT"]=" 1"
D["OPAL_C_GCC_INLINE_ASSEMBLY"]=" 1"
D["OPAL_C_DEC_INLINE_ASSEMBLY"]=" 0"
D["OPAL_C_XLC_INLINE_ASSEMBLY"]=" 0"
D["OMPI_CXX_GCC_INLINE_ASSEMBLY"]=" 1"
D["OMPI_CXX_DEC_INLINE_ASSEMBLY"]=" 0"
D["OMPI_CXX_XLC_INLINE_ASSEMBLY"]=" 0"
D["OPAL_ASSEMBLY_FORMAT"]=" \"default-.text-.globl-:-_-L--0-1-1-1-0\""
D["OPAL_ASSEMBLY_ARCH"]=" OMPI_AMD64"
D["OPAL_HAVE_ASM_FILE"]=" 1"
D["OMPI_F77_DOUBLE_UNDERSCORE"]=" 0"
D["OMPI_F77_SINGLE_UNDERSCORE"]=" 1"
D["OMPI_F77_CAPS"]=" 0"
D["OMPI_F77_PLAIN"]=" 0"
D["OMPI_WANT_F77_BINDINGS"]=" 1"
D["OMPI_F77"]=" \"gfortran\""
D["ompi_fortran_bogus_type_t"]=" int"
D["OMPI_HAVE_FORTRAN_CHARACTER"]=" 1"
D["OMPI_SIZEOF_FORTRAN_CHARACTER"]=" 1"
D["OMPI_ALIGNMENT_FORTRAN_CHARACTER"]=" 1"
D["ompi_fortran_character_t"]=" char"
D["OMPI_HAVE_FORTRAN_LOGICAL"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL"]=" 4"
D["ompi_fortran_logical_t"]=" int"
D["OMPI_HAVE_FORTRAN_LOGICAL1"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL1"]=" 1"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL1"]=" 1"
D["ompi_fortran_logical1_t"]=" char"
D["OMPI_HAVE_FORTRAN_LOGICAL2"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL2"]=" 2"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL2"]=" 2"
D["ompi_fortran_logical2_t"]=" short"
D["OMPI_HAVE_FORTRAN_LOGICAL4"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL4"]=" 4"
D["ompi_fortran_logical4_t"]=" int"
D["OMPI_HAVE_FORTRAN_LOGICAL8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL8"]=" 8"
D["ompi_fortran_logical8_t"]=" long long"
D["OMPI_HAVE_FORTRAN_INTEGER"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER"]=" 4"
D["ompi_fortran_integer_t"]=" int"
D["OMPI_HAVE_FORTRAN_INTEGER1"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER1"]=" 1"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER1"]=" 1"
D["ompi_fortran_integer1_t"]=" char"
D["OMPI_HAVE_FORTRAN_INTEGER2"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER2"]=" 2"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER2"]=" 2"
D["ompi_fortran_integer2_t"]=" short"
D["OMPI_HAVE_FORTRAN_INTEGER4"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER4"]=" 4"
D["ompi_fortran_integer4_t"]=" int"
D["OMPI_HAVE_FORTRAN_INTEGER8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER8"]=" 8"
D["ompi_fortran_integer8_t"]=" long long"
D["OMPI_HAVE_FORTRAN_INTEGER16"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER16"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER16"]=" 4"
D["ompi_fortran_integer16_t"]=" "
D["OMPI_HAVE_FORTRAN_REAL"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL"]=" 4"
D["ompi_fortran_real_t"]=" float"
D["OMPI_HAVE_FORTRAN_REAL2"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL2"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL2"]=" 4"
D["ompi_fortran_real2_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL4"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL4"]=" 4"
D["ompi_fortran_real4_t"]=" float"
D["OMPI_HAVE_FORTRAN_REAL8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_REAL8"]=" 8"
D["ompi_fortran_real8_t"]=" double"
D["OMPI_HAVE_FORTRAN_REAL16"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL16"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_REAL16"]=" 16"
D["ompi_fortran_real16_t"]=" long double"
D["OMPI_REAL16_MATCHES_C"]=" 0"
D["OMPI_HAVE_FORTRAN_DOUBLE_PRECISION"]=" 1"
D["OMPI_SIZEOF_FORTRAN_DOUBLE_PRECISION"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_DOUBLE_PRECISION"]=" 8"
D["ompi_fortran_double_precision_t"]=" double"
D["OMPI_HAVE_FORTRAN_COMPLEX"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX"]=" 4"
D["OMPI_HAVE_FORTRAN_DOUBLE_COMPLEX"]=" 1"
D["OMPI_SIZEOF_FORTRAN_DOUBLE_COMPLEX"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_DOUBLE_COMPLEX"]=" 8"
D["OMPI_HAVE_FORTRAN_COMPLEX8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX8"]=" 4"
D["OMPI_HAVE_FORTRAN_COMPLEX16"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX16"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX16"]=" 8"
D["OMPI_HAVE_FORTRAN_COMPLEX32"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX32"]=" 32"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX32"]=" 16"
D["OMPI_FORTRAN_HANDLE_MAX"]=" ( 2147483647 < 2147483647 ? 2147483647 : 2147483647 )"
D["OMPI_FORTRAN_VALUE_TRUE"]=" 1"
D["OMPI_WANT_F90_BINDINGS"]=" 1"
D["OMPI_F90"]=" \"gfortran\""
D["OMPI_HAVE_F90_CHARACTER"]=" 1"
D["OMPI_SIZEOF_F90_CHARACTER"]=" 1"
D["OMPI_HAVE_F90_LOGICAL"]=" 1"
D["OMPI_SIZEOF_F90_LOGICAL"]=" 4"
D["OMPI_HAVE_F90_LOGICAL1"]=" 1"
D["OMPI_SIZEOF_F90_LOGICAL1"]=" 1"
D["OMPI_HAVE_F90_LOGICAL2"]=" 1"
D["OMPI_SIZEOF_F90_LOGICAL2"]=" 2"
D["OMPI_HAVE_F90_LOGICAL4"]=" 1"
D["OMPI_SIZEOF_F90_LOGICAL4"]=" 4"
D["OMPI_HAVE_F90_LOGICAL8"]=" 1"
D["OMPI_SIZEOF_F90_LOGICAL8"]=" 8"
D["OMPI_HAVE_F90_INTEGER"]=" 1"
D["OMPI_SIZEOF_F90_INTEGER"]=" 4"
D["OMPI_HAVE_F90_INTEGER1"]=" 1"
D["OMPI_SIZEOF_F90_INTEGER1"]=" 1"
D["OMPI_HAVE_F90_INTEGER2"]=" 1"
D["OMPI_SIZEOF_F90_INTEGER2"]=" 2"
D["OMPI_HAVE_F90_INTEGER4"]=" 1"
D["OMPI_SIZEOF_F90_INTEGER4"]=" 4"
D["OMPI_HAVE_F90_INTEGER8"]=" 1"
D["OMPI_SIZEOF_F90_INTEGER8"]=" 8"
D["OMPI_HAVE_F90_INTEGER16"]=" 1"
D["OMPI_SIZEOF_F90_INTEGER16"]=" 16"
D["OMPI_HAVE_F90_REAL"]=" 1"
D["OMPI_SIZEOF_F90_REAL"]=" 4"
D["OMPI_HAVE_F90_REAL2"]=" 0"
D["OMPI_SIZEOF_F90_REAL2"]=" 4"
D["OMPI_HAVE_F90_REAL4"]=" 1"
D["OMPI_SIZEOF_F90_REAL4"]=" 4"
D["OMPI_HAVE_F90_REAL8"]=" 1"
D["OMPI_SIZEOF_F90_REAL8"]=" 8"
D["OMPI_HAVE_F90_REAL16"]=" 1"
D["OMPI_SIZEOF_F90_REAL16"]=" 16"
D["OMPI_HAVE_F90_DOUBLE_PRECISION"]=" 1"
D["OMPI_SIZEOF_F90_DOUBLE_PRECISION"]=" 8"
D["OMPI_HAVE_F90_COMPLEX"]=" 1"
D["OMPI_SIZEOF_F90_COMPLEX"]=" 8"
D["OMPI_HAVE_F90_COMPLEX8"]=" 1"
D["OMPI_SIZEOF_F90_COMPLEX8"]=" 8"
D["OMPI_HAVE_F90_COMPLEX16"]=" 1"
D["OMPI_SIZEOF_F90_COMPLEX16"]=" 16"
D["OMPI_HAVE_F90_COMPLEX32"]=" 1"
D["OMPI_SIZEOF_F90_COMPLEX32"]=" 32"
D["OMPI_HAVE_F90_DOUBLE_COMPLEX"]=" 1"
D["OMPI_SIZEOF_F90_DOUBLE_COMPLEX"]=" 16"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_AIO_H"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["HAVE_ERR_H"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_GRP_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_LIBGEN_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_POLL_H"]=" 1"
D["HAVE_PTHREAD_H"]=" 1"
D["HAVE_PWD_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_FCNTL_H"]=" 1"
D["HAVE_SYS_IPC_H"]=" 1"
D["HAVE_SYS_SHM_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_QUEUE_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_SYS_SOCKIO_H"]=" 1"
D["HAVE_STDARG_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_STATVFS_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE_SYSLOG_H"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_ULIMIT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_UTIL_H"]=" 1"
D["HAVE_UTMP_H"]=" 1"
D["HAVE_IFADDRS_H"]=" 1"
D["HAVE_CRT_EXTERNS_H"]=" 1"
D["HAVE_REGEX_H"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_NET_IF_H"]=" 1"
D["HAVE_STDBOOL_H"]=" 1"
D["OPAL_USE_STDBOOL_H"]=" 1"
D["SIZEOF_PID_T"]=" 4"
D["HAVE_SOCKLEN_T"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN6"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE"]=" 1"
D["HAVE_DECL_AF_UNSPEC"]=" 1"
D["HAVE_DECL_PF_UNSPEC"]=" 1"
D["HAVE_DECL_AF_INET6"]=" 1"
D["HAVE_DECL_PF_INET6"]=" 1"
D["OPAL_HAVE_SA_RESTART"]=" 1"
D["HAVE_STRUCT_SOCKADDR_SA_LEN"]=" 1"
D["HAVE_STRUCT_DIRENT_D_TYPE"]=" 1"
D["HAVE_SIGINFO_T_SI_BAND"]=" 1"
D["HAVE_OPENPTY"]=" 1"
D["HAVE_SCHED_YIELD"]=" 1"
D["HAVE_DIRNAME"]=" 1"
D["HAVE_CEIL"]=" 1"
D["HAVE_ASPRINTF"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["HAVE_OPENPTY"]=" 1"
D["HAVE_ISATTY"]=" 1"
D["HAVE_GETPWUID"]=" 1"
D["HAVE_FORK"]=" 1"
D["HAVE_WAITPID"]=" 1"
D["HAVE_EXECVE"]=" 1"
D["HAVE_PIPE"]=" 1"
D["HAVE_PTSNAME"]=" 1"
D["HAVE_SETSID"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_TCGETPGRP"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_STRSIGNAL"]=" 1"
D["HAVE_SYSCONF"]=" 1"
D["HAVE_SYSLOG"]=" 1"
D["HAVE_REGEXEC"]=" 1"
D["HAVE_REGFREE"]=" 1"
D["HAVE__NSGETENVIRON"]=" 1"
D["HAVE_SOCKETPAIR"]=" 1"
D["HAVE_USLEEP"]=" 1"
D["HAVE_MKFIFO"]=" 1"
D["HAVE_UNIX_BYTESWAP"]=" 1"
D["OPAL_HAVE_VA_COPY"]=" 1"
D["OPAL_HAVE_UNDERSCORE_VA_COPY"]=" 1"
D["HAVE_DECL___FUNC__"]=" 1"
D["OMPI_MPI_OFFSET_TYPE"]=" long long"
D["OMPI_MPI_OFFSET_SIZE"]=" 8"
D["OMPI_OFFSET_DATATYPE"]=" MPI_LONG_LONG"
D["OPAL_PTRDIFF_TYPE"]=" ptrdiff_t"
D["OPAL_HAVE__SC_NPROCESSORS_ONLN"]=" 1"
D["OPAL_HAVE_BROKEN_QSORT"]=" 0"
D["OPAL_ALIGN_WORD_SIZE_INTEGERS"]=" 0"
D["OMPI_HAVE_PTHREAD_MUTEX_ERRORCHECK_NP"]=" 0"
D["OMPI_HAVE_PTHREAD_MUTEX_ERRORCHECK"]=" 1"
D["OPAL_HAVE_SOLARIS_THREADS"]=" 0"
D["OPAL_HAVE_POSIX_THREADS"]=" 1"
D["OPAL_THREADS_HAVE_DIFFERENT_PIDS"]=" 0"
D["OPAL_ENABLE_MULTI_THREADS"]=" 0"
D["OPAL_ENABLE_FT_THREAD"]=" 0"
D["OMPI_ENABLE_THREAD_MULTIPLE"]=" 0"
D["YYTEXT_POINTER"]=" 1"
D["ORTE_CLEAN_PS_CMD"]=" \"ps -A -o command,pid,user\""
D["HAVE_DECL_RLIMIT_NPROC"]=" 1"
D["HAVE_DECL_RLIMIT_MEMLOCK"]=" 1"
D["HWLOC_SYM_PREFIX"]=" opal_hwloc132_"
D["HWLOC_SYM_PREFIX_CAPS"]=" OPAL_HWLOC132_"
D["HWLOC_SYM_TRANSFORM"]=" 1"
D["_HPUX_SOURCE"]=" 1"
D["SIZEOF_VOID_P"]=" 8"
D["HWLOC_DARWIN_SYS"]=" 1"
D["HWLOC_X86_64_ARCH"]=" 1"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["HWLOC_SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_UNSIGNED_INT"]=" 4"
D["HWLOC_SIZEOF_UNSIGNED_INT"]=" 4"
D["HWLOC_HAVE_ATTRIBUTE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_ALIGNED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_ALWAYS_INLINE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_COLD"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_CONST"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_DEPRECATED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_FORMAT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_HOT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_MAY_ALIAS"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NONNULL"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_PACKED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_PURE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_SENTINEL"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_UNUSED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_WEAK_ALIAS"]=" 0"
D["HWLOC_C_HAVE_VISIBILITY"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["hwloc_strncasecmp"]=" strncasecmp"
D["HAVE_STRFTIME"]=" 1"
D["HAVE_SETLOCALE"]=" 1"
D["HWLOC_HAVE_STDINT_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_DECL__SC_NPROCESSORS_ONLN"]=" 1"
D["HAVE_DECL__SC_NPROCESSORS_CONF"]=" 1"
D["HAVE_DECL__SC_NPROC_ONLN"]=" 0"
D["HAVE_DECL__SC_NPROC_CONF"]=" 0"
D["HAVE_DECL__SC_LARGE_PAGESIZE"]=" 0"
D["HAVE_MACH_MACH_HOST_H"]=" 1"
D["HAVE_MACH_MACH_INIT_H"]=" 1"
D["HAVE_HOST_INFO"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_DECL_CTL_HW"]=" 1"
D["HAVE_DECL_HW_NCPU"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SYSCTLBYNAME"]=" 1"
D["HAVE_PTHREAD_T"]=" 1"
D["hwloc_pid_t"]=" pid_t"
D["hwloc_thread_t"]=" pthread_t"
D["HAVE_FFS"]=" 1"
D["HWLOC_HAVE_DECL_FFS"]=" 1"
D["HWLOC_HAVE_FFS"]=" 1"
D["HAVE_FFSL"]=" 1"
D["HWLOC_HAVE_DECL_FFSL"]=" 1"
D["HWLOC_HAVE_FFSL"]=" 1"
D["HAVE_FLS"]=" 1"
D["HWLOC_HAVE_DECL_FLS"]=" 1"
D["HWLOC_HAVE_FLS"]=" 1"
D["HAVE_FLSL"]=" 1"
D["HWLOC_HAVE_DECL_FLSL"]=" 1"
D["HWLOC_HAVE_FLSL"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_UNAME"]=" 1"
D["HAVE_DECL_PTHREAD_SETAFFINITY_NP"]=" 0"
D["HAVE_DECL_PTHREAD_GETAFFINITY_NP"]=" 0"
D["HWLOC_HAVE_CPUID"]=" 1"
D["HWLOC_HWLOC132_HWLOC_VERSION"]=" \"internal v1.3.2\""
D["MCA_hwloc_IMPLEMENTATION_HEADER"]=" \"opal/mca/hwloc/hwloc132/hwloc132.h\""
D["OPAL_HAVE_HWLOC"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["HAVE_BACKTRACE"]=" 1"
D["HAVE_VM_READ_OVERWRITE"]=" 1"
D["OMPI_WANT_MEMCHECKER"]=" 0"
D["MCA_memcpy_IMPLEMENTATION_HEADER"]=" \"opal/mca/memcpy/base/memcpy_base_default.h\""
D["MEMORY_LINUX_PTMALLOC2"]=" 0"
D["MEMORY_LINUX_UMMUNOTIFY"]=" 0"
D["OMPI_MEMORY_HAVE_COMPONENT"]=" 0"
D["MCA_memory_IMPLEMENTATION_HEADER"]=" \"opal/mca/memory/base/empty.h\""
D["OPAL_SHMEM_MMAP"]=" 1"
D["OPAL_SHMEM_POSIX"]=" 1"
D["OPAL_SHMEM_SYSV"]=" 1"
D["OPAL_SHMEM_WINDOWS"]=" 0"
D["HAVE_MACH_MACH_TIME_H"]=" 1"
D["MCA_timer_IMPLEMENTATION_HEADER"]=" \"opal/mca/timer/darwin/timer_darwin.h\""
D["ORTE_MCA_ESS_ALPS_HAVE_CNOS"]=" 0"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_CRAY_PMI2_EXT"]=" "
D["OMPI_GRPCOMM_CNOS_HAVE_BARRIER"]=" 0"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_CRAY_PMI2_EXT"]=" "
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OMPI_OPENIB_PAD_HDR"]=" 0"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["OMPI_HAVE_CONNECTX_XRC"]=" 0"
D["OMPI_ENABLE_DYNAMIC_SL"]=" 0"
D["OMPI_HAVE_RDMACM"]=" 0"
D["OMPI_OPENIB_PAD_HDR"]=" 0"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["OMPI_HAVE_CONNECTX_XRC"]=" 0"
D["OMPI_ENABLE_DYNAMIC_SL"]=" 0"
D["OMPI_HAVE_RDMACM"]=" 0"
D["BTL_OPENIB_FAILOVER_ENABLED"]=" 0"
D["BTL_OPENIB_MALLOC_HOOKS_ENABLED"]=" 0"
D["OMPI_PORTALS_HAVE_EVENT_UNLINK"]=" 1"
D["OMPI_PORTALS_UTCP"]=" 1"
D["OMPI_PORTALS_CRAYXT3"]=" 0"
D["OMPI_PORTALS_CRAYXT3_MODEX"]=" 0"
D["OMPI_MCA_BTL_SCTP_USE_ONE_TO_ONE_SOCKET"]=" 0"
D["OMPI_MCA_BTL_SCTP_CONCATENATES_IOVS"]=" 0"
D["HAVE_NETINET_IN_H"]=" 1"
D["OMPI_BTL_SM_HAVE_KNEM"]=" 0"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OMPI_PORTALS_HAVE_EVENT_UNLINK"]=" 1"
D["OMPI_PORTALS_UTCP"]=" 1"
D["OMPI_PORTALS_CRAYXT3"]=" 0"
D["OMPI_PORTALS_CRAYXT3_MODEX"]=" 0"
D["MCA_io_romio_USER_CONFIGURE_FLAGS"]=" \"\""
D["MCA_io_romio_COMPLETE_CONFIGURE_FLAGS"]=" \" CFLAGS='-DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing ' CPPFLAGS=' -D_REENTRANT -I/Users/l"\
"uongnv89/programming/openmpi/openmpi-1.6.5/opal/mca/hwloc/hwloc132/hwloc/include   -I/usr/include/infiniband -I/usr/include/infiniband' FFLAGS='' LD"\
"FLAGS=' ' --enable-shared --disable-static  --prefix=/usr/local --with-mpi=open_mpi --disable-aio\""
D["OMPI_PROVIDE_MPI_FILE_INTERFACE"]=" 1"
D["OMPI_PORTALS_HAVE_EVENT_UNLINK"]=" 1"
D["OMPI_PORTALS_UTCP"]=" 1"
D["OMPI_PORTALS_CRAYXT3"]=" 0"
D["OMPI_PORTALS_CRAYXT3_MODEX"]=" 0"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_CRAY_PMI2_EXT"]=" "
D["MCA_pml_DIRECT_CALL"]=" 0"
D["MCA_pml_DIRECT_CALL_COMPONENT"]=" "
D["MCA_pml_DIRECT_CALL_HEADER"]=" \"\""
D["MCA_mtl_DIRECT_CALL"]=" 0"
D["MCA_mtl_DIRECT_CALL_COMPONENT"]=" "
D["MCA_mtl_DIRECT_CALL_HEADER"]=" \"\""
D["OMPI_EXT_COMPONENTS"]=" \" affinity example\""
D["OMPI_ENABLE_CONTRIB_libompitrace"]=" 1"
D["OMPI_ENABLE_CONTRIB_vt"]=" 1"
D["OPAL_C_HAVE_VISIBILITY"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_STDARG_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_POLL_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_QUEUE_H"]=" 1"
D["HAVE_SYS_EVENT_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_TAILQFOREACH"]=" 1"
D["HAVE_TIMERADD"]=" 1"
D["TIME_WITH_SYS_TIME"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["HAVE_FCNTL"]=" 1"
D["HAVE_STRTOLL"]=" 1"
D["HAVE_SETFD"]=" 1"
D["HAVE_SELECT"]=" 1"
D["HAVE_POLL"]=" 1"
D["HAVE_WORKING_POLL"]=" 0"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["OPAL_HAVE_LTDL_ADVISE"]=" 1"
D["OPAL_WANT_LIBLTDL"]=" 1"
D["OPAL_LIBLTDL_INTERNAL"]=" 1"
D["WRAPPER_EXTRA_CFLAGS"]=" \" \""
D["WRAPPER_EXTRA_CXXFLAGS"]=" \" \""
D["WRAPPER_EXTRA_LDFLAGS"]=" \"  \""
D["WRAPPER_EXTRA_LIBS"]=" \"  -lm  \""
D["WRAPPER_EXTRA_FFLAGS"]=" \"-Wl,-commons,use_dylibs \""
D["WRAPPER_EXTRA_FCFLAGS"]=" \"-Wl,-commons,use_dylibs \""
D["OPAL_STDC_HEADERS"]=" 1"
D["OPAL_HAVE_SYS_TIME_H"]=" 1"
D["OPAL_HAVE_LONG_LONG"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "libtool":C)

    # See if we are running on zsh, and set the options which allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}" ; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile="${ofile}T"
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL

# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.
#
#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
#                 Foundation, Inc.
#   Written by Gordon Matzigkeit, 1996
#
#   This file is part of GNU Libtool.
#
# GNU Libtool is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# As a special exception to the GNU General Public License,
# if you distribute this file as part of a program or library that
# is built using GNU Libtool, you may include this file under the
# same distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Libtool; see the file COPYING.  If not, a copy
# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
# obtained by writing to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


# The names of the tagged configurations supported by this script.
available_tags="CXX F77 FC "

# ### BEGIN LIBTOOL CONFIG

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Assembler program.
AS=$lt_AS

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Object dumper program.
OBJDUMP=$lt_OBJDUMP

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive.
AR_FLAGS=$lt_AR_FLAGS

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and in which our libraries should be installed.
lt_sysroot=$lt_sysroot

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test "X${COLLECT_NAMES+set}" != Xset; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain="$ac_aux_dir/ltmain.sh"


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

  if test x"$xsi_shell" = xyes; then
  sed -e '/^func_dirname ()$/,/^} # func_dirname /c\
func_dirname ()\
{\
\    case ${1} in\
\      */*) func_dirname_result="${1%/*}${2}" ;;\
\      *  ) func_dirname_result="${3}" ;;\
\    esac\
} # Extended-shell func_dirname implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_basename ()$/,/^} # func_basename /c\
func_basename ()\
{\
\    func_basename_result="${1##*/}"\
} # Extended-shell func_basename implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_dirname_and_basename ()$/,/^} # func_dirname_and_basename /c\
func_dirname_and_basename ()\
{\
\    case ${1} in\
\      */*) func_dirname_result="${1%/*}${2}" ;;\
\      *  ) func_dirname_result="${3}" ;;\
\    esac\
\    func_basename_result="${1##*/}"\
} # Extended-shell func_dirname_and_basename implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_stripname ()$/,/^} # func_stripname /c\
func_stripname ()\
{\
\    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\
\    # positional parameters, so assign one to ordinary parameter first.\
\    func_stripname_result=${3}\
\    func_stripname_result=${func_stripname_result#"${1}"}\
\    func_stripname_result=${func_stripname_result%"${2}"}\
} # Extended-shell func_stripname implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_split_long_opt ()$/,/^} # func_split_long_opt /c\
func_split_long_opt ()\
{\
\    func_split_long_opt_name=${1%%=*}\
\    func_split_long_opt_arg=${1#*=}\
} # Extended-shell func_split_long_opt implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_split_short_opt ()$/,/^} # func_split_short_opt /c\
func_split_short_opt ()\
{\
\    func_split_short_opt_arg=${1#??}\
\    func_split_short_opt_name=${1%"$func_split_short_opt_arg"}\
} # Extended-shell func_split_short_opt implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_lo2o ()$/,/^} # func_lo2o /c\
func_lo2o ()\
{\
\    case ${1} in\
\      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\
\      *)    func_lo2o_result=${1} ;;\
\    esac\
} # Extended-shell func_lo2o implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_xform ()$/,/^} # func_xform /c\
func_xform ()\
{\
    func_xform_result=${1%.*}.lo\
} # Extended-shell func_xform implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_arith ()$/,/^} # func_arith /c\
func_arith ()\
{\
    func_arith_result=$(( $* ))\
} # Extended-shell func_arith implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_len ()$/,/^} # func_len /c\
func_len ()\
{\
    func_len_result=${#1}\
} # Extended-shell func_len implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:

fi

if test x"$lt_shell_append" = xyes; then
  sed -e '/^func_append ()$/,/^} # func_append /c\
func_append ()\
{\
    eval "${1}+=\\${2}"\
} # Extended-shell func_append implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_append_quoted ()$/,/^} # func_append_quoted /c\
func_append_quoted ()\
{\
\    func_quote_for_eval "${2}"\
\    eval "${1}+=\\\\ \\$func_quote_for_eval_result"\
} # Extended-shell func_append_quoted implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  # Save a `func_append' function call where possible by direct use of '+='
  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1+="%g' $cfgfile > $cfgfile.tmp \
    && mv -f "$cfgfile.tmp" "$cfgfile" \
      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
  test 0 -eq $? || _lt_function_replace_fail=:
else
  # Save a `func_append' function call even when '+=' is not available
  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1="$\1%g' $cfgfile > $cfgfile.tmp \
    && mv -f "$cfgfile.tmp" "$cfgfile" \
      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
  test 0 -eq $? || _lt_function_replace_fail=:
fi

if test x"$_lt_function_replace_fail" = x":"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Unable to substitute extended shell functions in $ofile" >&5
$as_echo "$as_me: WARNING: Unable to substitute extended shell functions in $ofile" >&2;}
fi


   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# How to create reloadable object files.
reload_flag=$lt_reload_flag_CXX
reload_cmds=$lt_reload_cmds_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: F77

# The linker used to build libraries.
LD=$lt_LD_F77

# How to create reloadable object files.
reload_flag=$lt_reload_flag_F77
reload_cmds=$lt_reload_cmds_F77

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_F77

# A language specific compiler.
CC=$lt_compiler_F77

# Is the compiler the GNU compiler?
with_gcc=$GCC_F77

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_F77

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_F77

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_F77

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_F77

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_F77

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_F77

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_F77

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_F77

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_F77

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_F77

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_F77

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_F77

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_F77
archive_expsym_cmds=$lt_archive_expsym_cmds_F77

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_F77
module_expsym_cmds=$lt_module_expsym_cmds_F77

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_F77

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_F77

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_F77

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_F77

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_F77

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_F77

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_F77

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_F77

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_F77

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_F77

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_F77

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_F77

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_F77

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_F77

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_F77

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_F77

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_F77

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_F77

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_F77

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_F77

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_F77

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_F77
postdep_objects=$lt_postdep_objects_F77
predeps=$lt_predeps_F77
postdeps=$lt_postdeps_F77

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_F77

# ### END LIBTOOL TAG CONFIG: F77
_LT_EOF


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: FC

# The linker used to build libraries.
LD=$lt_LD_FC

# How to create reloadable object files.
reload_flag=$lt_reload_flag_FC
reload_cmds=$lt_reload_cmds_FC

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_FC

# A language specific compiler.
CC=$lt_compiler_FC

# Is the compiler the GNU compiler?
with_gcc=$GCC_FC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_FC

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_FC

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_FC

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_FC

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_FC

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_FC

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_FC

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_FC

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_FC

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_FC

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_FC

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_FC

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_FC
archive_expsym_cmds=$lt_archive_expsym_cmds_FC

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_FC
module_expsym_cmds=$lt_module_expsym_cmds_FC

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_FC

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_FC

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_FC

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_FC

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_FC

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_FC

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_FC

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_FC

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_FC

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_FC

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_FC

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_FC

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_FC

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_FC

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_FC

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_FC

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_FC

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_FC

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_FC

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_FC

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_FC

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_FC
postdep_objects=$lt_postdep_objects_FC
predeps=$lt_predeps_FC
postdeps=$lt_postdeps_FC

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_FC

# ### END LIBTOOL TAG CONFIG: FC
_LT_EOF

 ;;
    "orte/tools/wrappers/orte_wrapper_script":F) chmod +x orte/tools/wrappers/orte_wrapper_script ;;
    "ompi/tools/wrappers/ompi_wrapper_script":F) chmod +x ompi/tools/wrappers/ompi_wrapper_script ;;

  esac
done # for ac_tag


as_fn_exit 0
